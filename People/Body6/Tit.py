# -*- coding: utf-8 -*-
##############################################################################
## 乳頭及乳暈
##############################################################################
import os
import sys
import time
import datetime
import logging
import requests
import threading
import gettext
import binascii
import hashlib
import base64
import glob
##############################################################################
from   io           import BytesIO
from   wand . image import Image
from   PIL          import Image as Pillow
##############################################################################
import cv2
import dlib
import skimage
import numpy        as np
##############################################################################
## Tit      : 胸部，ちっぱい，Entire Chest
## Boob     : 胸部，おっぱい
## Nipple   : 乳頭
## Areola   : 乳暈
## Breast   : 乳房，胸
## Bust     : バスト、胸囲、胸像
## Cleavage : 谷間
##############################################################################
class Tit         (                                                        ) :
  ############################################################################
  def __init__    ( self                                                   ) :
    ##########################################################################
    self . Classifier = None
    self . Detector   = None
    ##########################################################################
    return
  ############################################################################
  def __del__     ( self                                                   ) :
    ##########################################################################
    ##########################################################################
    return
  ############################################################################
  def LoadClassifier                            ( self , XML               ) :
    ##########################################################################
    self . Classifier = cv2 . CascadeClassifier (        XML                 )
    ##########################################################################
    return
  ############################################################################
  def LoadDetector                                  ( self , SVM           ) :
    ##########################################################################
    self . Detector = dlib . simple_object_detector (        SVM             )
    ##########################################################################
    return
  ############################################################################
  def ToBoobs                      ( self                                  , \
                                     gray                                  , \
                                     scale     = 1.05                      , \
                                     neighbors = 5                         , \
                                     minsize   = ( 32 , 32 )               ) :
    return self . Classifier . detectMultiScale                              (
             gray                                                          , \
             scaleFactor  = scale                                          , \
             minNeighbors = neighbors                                      , \
             minSize      = minsize                                        , \
             flags        = cv2 . CASCADE_SCALE_IMAGE                        )
  ############################################################################
  def BoobsToJson    ( self , BOOBs , ITEMs = [ ]                          ) :
    ##########################################################################
    for F in BOOBs                                                           :
      ########################################################################
      X     = F      [ 0                                                     ]
      Y     = F      [ 1                                                     ]
      W     = F      [ 2                                                     ]
      H     = F      [ 3                                                     ]
      ########################################################################
      J     =        { "X" : int ( X )                                     , \
                       "Y" : int ( Y )                                     , \
                       "W" : int ( W )                                     , \
                       "H" : int ( H )                                       }
      ########################################################################
      ITEMs . append ( J                                                     )
    ##########################################################################
    return ITEMs
  ############################################################################
  def ToDlibBoobs          ( self , image                                  ) :
    return self . Detector (        image                                    )
  ############################################################################
  def DlibBoobsToJson ( self , BOOBs , ITEMs = [ ]                         ) :
    ##########################################################################
    if                ( BOOBs in [ False , None                          ] ) :
      return ITEMs
    ##########################################################################
    CNT     = len     ( BOOBs                                                )
    ##########################################################################
    if                ( CNT <= 0                                           ) :
      return ITEMs
    ##########################################################################
    for id in range   ( 0 , CNT                                            ) :
      ########################################################################
      X     = BOOBs   [ id ] . left   (                                      )
      Y     = BOOBs   [ id ] . top    (                                      )
      W     = BOOBs   [ id ] . width  (                                      )
      H     = BOOBs   [ id ] . height (                                      )
      ########################################################################
      J     =         { "X" : int ( X )                                    , \
                        "Y" : int ( Y )                                    , \
                        "W" : int ( W )                                    , \
                        "H" : int ( H )                                      }
      ########################################################################
      ITEMs . append  ( J                                                    )
    ##########################################################################
    return ITEMs
##############################################################################
