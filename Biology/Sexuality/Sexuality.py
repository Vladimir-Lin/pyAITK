# -*- coding: utf-8 -*-
##############################################################################
## 性別元件
##############################################################################
import os
import sys
import getopt
import time
import datetime
import requests
import threading
##############################################################################
import mysql . connector
from   mysql . connector                   import Error
##############################################################################
import AITK
from   AITK  . Database   . Query          import Query
from   AITK  . Database   . Connection     import Connection
from   AITK  . Database   . Pair           import Pair
from   AITK  . Database   . Columns        import Columns
##############################################################################
from   AITK  . Documents  . ParameterQuery import ParameterQuery as ParameterQuery
from   AITK  . Essentials . Relation       import Relation       as Relation
##############################################################################
SEXUALITYREL       = "`affiliations`.`relations_people_0009`"
SEXUALITYPARAM     = "`cios`.`parameters`"
SexualityShortType = 77
SexualityLongType  = 1100000000000000077
SexualityTypeName  = "Sexuality"
##############################################################################
class Sexuality          ( Columns                                         ) :
  ############################################################################
  def __init__           ( self                                            ) :
    ##########################################################################
    super ( ) . __init__ (                                                   )
    self      . Clear    (                                                   )
    ##########################################################################
    return
  ############################################################################
  def __del__ ( self                                                       ) :
    ##########################################################################
    ##########################################################################
    return
  ############################################################################
  def Clear             ( self                                             ) :
    ##########################################################################
    self . Columns    = [                                                    ]
    self . Id         = -1
    self . Uuid       =  0
    self . Used       =  0
    self . Creature   =  0
    self . Gender     =  ""
    self . Chromosome =  ""
    self . ltime      =  0
    ##########################################################################
    return
  ############################################################################
  def assign ( self , item                                                 ) :
    ##########################################################################
    self . Columns    = item . Columns
    self . Id         = item . Id
    self . Uuid       = item . Uuid
    self . Used       = item . Used
    self . Creature   = item . Creature
    self . Gender     = item . Gender
    self . Chromosome = item . Chromosome
    self . ltime      = item . ltime
    ##########################################################################
    return
  ############################################################################
  def set            ( self , item , value                                 ) :
    ##########################################################################
    a = item . lower (                                                       )
    ##########################################################################
    if               ( "id"         == a                                   ) :
      self . Id     = value
    ##########################################################################
    elif             ( "uuid"       == a                                   ) :
      self . Uuid   = value
    ##########################################################################
    elif             ( "used"       == a                                   ) :
      self . Used   = value
    ##########################################################################
    elif             ( "creature"   == a                                   ) :
      self . Creature  = value
    ##########################################################################
    elif             ( "gender"     == a                                   ) :
      self . Gender    = value
    ##########################################################################
    elif             ( "chromosome" == a                                   ) :
      self . Chromosome = value
    ##########################################################################
    elif             ( "ltime"      == a                                   ) :
      self . ltime  = value
    ##########################################################################
    return
  ############################################################################
  def get            ( self , item                                         ) :
    ##########################################################################
    a = item . lower (                                                       )
    ##########################################################################
    if               ( "id"         == a                                   ) :
      return self . Id
    ##########################################################################
    if               ( "uuid"       == a                                   ) :
      return self . Uuid
    ##########################################################################
    if               ( "used"       == a                                   ) :
      return self . Used
    ##########################################################################
    if               ( "creature"   == a                                   ) :
      return self . Creature
    ##########################################################################
    if               ( "gender"     == a                                   ) :
      return self . Gender
    ##########################################################################
    if               ( "chromosome" == a                                   ) :
      return self . Chromosome
    ##########################################################################
    if               ( "ltime"      == a                                   ) :
      return self . ltime
    ##########################################################################
    return ""
  ############################################################################
  def tableItems        ( self                                             ) :
    return [ "id"                                                            ,
             "uuid"                                                          ,
             "used"                                                          ,
             "creature"                                                      ,
             "gender"                                                        ,
             "chromosome"                                                    ,
             "ltime"                                                         ]
  ############################################################################
  def pair              ( self , item                                      ) :
    v = self . get      (        item                                        )
    return f"`{item}` = {v}"
  ############################################################################
  def valueItems        ( self                                             ) :
    return [ "used"                                                          ,
             "creature"                                                      ,
             "gender"                                                        ,
             "chromosome"                                                    ]
  ############################################################################
  def toJson ( self                                                        ) :
    return   { "Id"         : self . Id                                    , \
               "Uuid"       : self . Uuid                                  , \
               "Used"       : self . Used                                  , \
               "Creature"   : self . Creature                              , \
               "Gender"     : self . Gender                                , \
               "Chromosome" : self . Chromosome                              }
  ############################################################################
  ## 查詢語法
  ############################################################################
  def QuerySyntax          ( self                                          , \
                             TABLE                                         , \
                             CreatureUuid                                  , \
                             IncludeUndecided                              , \
                             UsedOptions                                   , \
                             ORDER                                         ) :
    ##########################################################################
    LISTs   =              [                                                 ]
    ##########################################################################
    if                     ( CreatureUuid > 0                              ) :
      LISTs . append       ( CreatureUuid                                    )
    ##########################################################################
    if                     ( IncludeUndecided                              ) :
      LISTs . append       ( 0                                               )
    ##########################################################################
    LQ      = " , " . join ( str(x) for x in LISTs                           )
    UQ      = " , " . join ( str(x) for x in UsedOptions                     )
    ##########################################################################
    QQ      = f"""select `uuid` from {TABLE}
                  where ( `used` in ( {UQ} ) )
                  and ( `creature` in ( {LQ} ) )
                  order by `id` asc ;"""
    ##########################################################################
    return " " . join      ( QQ . split (                                  ) )
  ############################################################################
  ## 計算生物性別所擁有的人物族群
  ############################################################################
  def CountCrowds            ( self , DB , TABLE , RELATE , UUID           ) :
    ##########################################################################
    global SexualityTypeName
    ##########################################################################
    REL        = Relation    (                                               )
    REL        . set         ( "first" , UUID                                )
    REL        . setT1       ( SexualityTypeName                              )
    REL        . setT2       ( "People"                                      )
    REL        . setRelation ( RELATE                                        )
    ##########################################################################
    return REL . CountSecond ( DB , TABLE                                    )
  ############################################################################
  def CountDefaultCrowds      ( self , DB ,                RELATE , UUID   ) :
    ##########################################################################
    global SEXUALITYREL
    ##########################################################################
    return self . CountCrowds (        DB , SEXUALITYREL , RELATE , UUID     )
  ############################################################################
  ## 人物加入眼睛外形族群
  ############################################################################
  def PeopleJoinSexuality ( self , DB , TABLE , RELATE , UUID , UUIDs      ) :
    ##########################################################################
    global SexualityTypeName
    ##########################################################################
    REL = Relation        (                                                  )
    REL . set             ( "first" , UUID                                   )
    REL . setT1           ( SexualityTypeName                                )
    REL . setT2           ( "People"                                         )
    REL . setRelation     ( RELATE                                           )
    REL . Joins           ( DB , TABLE , UUIDs                               )
    ##########################################################################
    return
  ############################################################################
  def PeopleJoinDefaultSexuality ( self , DB , RELATE , UUID , UUIDs       ) :
    ##########################################################################
    global SEXUALITYREL
    ##########################################################################
    self . PeopleJoinSexuality   ( DB , SEXUALITYREL , RELATE , UUID , UUIDs )
    ##########################################################################
    return
  ############################################################################
  ############################################################################
##############################################################################
