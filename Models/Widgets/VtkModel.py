# -*- coding: utf-8 -*-
##############################################################################
## VtkModel
##############################################################################
import os
import sys
import getopt
import time
import requests
import threading
import gettext
import json
import math
##############################################################################
import vtk
##############################################################################
from   PyQt5                          import QtCore
from   PyQt5                          import QtGui
from   PyQt5                          import QtWidgets
##############################################################################
from   PyQt5 . QtCore                 import QObject
from   PyQt5 . QtCore                 import pyqtSignal
from   PyQt5 . QtCore                 import Qt
from   PyQt5 . QtCore                 import QPoint
from   PyQt5 . QtCore                 import QPointF
##############################################################################
from   PyQt5 . QtGui                  import QIcon
from   PyQt5 . QtGui                  import QCursor
from   PyQt5 . QtGui                  import QKeySequence
##############################################################################
from   PyQt5 . QtWidgets              import QApplication
from   PyQt5 . QtWidgets              import qApp
from   PyQt5 . QtWidgets              import QWidget
from   PyQt5 . QtWidgets              import QFileDialog
from   PyQt5 . QtWidgets              import QSpinBox
from   PyQt5 . QtWidgets              import QDoubleSpinBox
##############################################################################
from   AITK  . VTK . VtkWidget        import VtkWidget   as VtkWidget
from   AITK  . VTK . Wrapper          import Wrapper     as VtkWrapper
##############################################################################
from   AITK  . Qt  . MenuManager      import MenuManager as MenuManager
##############################################################################
from   AITK  . Math . Geometry . ControlPoint import ControlPoint as ControlPoint
from   AITK  . Math . Geometry . Contour      import Contour      as Contour
from   AITK  . Math . Geometry . Circle       import Circle       as Circle
from   AITK  . Math . Geometry . Cylinder     import Cylinder     as Cylinder
from   AITK  . Math . Geometry . Plane        import Plane        as Plane
from   AITK  . Math . Geometry . Parabola     import Parabola     as Parabola
from   AITK  . Math . Geometry . Sphere       import Sphere       as Sphere
from   AITK  . Math . Geometry . Polyhedron   import Polyhedron   as Polyhedron
##############################################################################
class VtkModel                 ( VtkWidget                                 ) :
  ############################################################################
  def __init__                 ( self , parent = None , plan = None        ) :
    ##########################################################################
    super ( ) . __init__       (        parent        , plan                 )
    self . setVtkModelDefaults (                                             )
    ##########################################################################
    return
  ############################################################################
  def setVtkModelDefaults  ( self                                          ) :
    ##########################################################################
    ## self . dockingPlace = Qt . BottomDockWidgetArea
    ##########################################################################
    self . setFunction     ( self . HavingMenu , True                        )
    ##########################################################################
    self . setAcceptDrops  ( True                                            )
    ## self . setDragEnabled  ( True                                            )
    ## self . setDragDropMode ( QAbstractItemView . DragDrop                    )
    ##########################################################################
    ##########################################################################
    return
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  def startup                       ( self                                 ) :
    ##########################################################################
    self . renderer   . ResetCamera (                                        )
    ##########################################################################
    self . interactor . Initialize  (                                        )
    self . interactor . Start       (                                        )
    ##########################################################################
    return
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  def SwitchDisplayElement          ( self , Item                          ) :
    ##########################################################################
    E      = self . FaceObjects     [ Item ] [ "Enabled"                     ]
    A      = self . FaceObjects     [ Item ] [ "Actor"                       ]
    ##########################################################################
    if                              ( E                                    ) :
      ########################################################################
      E    = False
      self . renderer . RemoveActor ( A                                      )
      ########################################################################
    else                                                                     :
      ########################################################################
      E    = True
      self . renderer . AddActor    ( A                                      )
    ##########################################################################
    self   . FaceObjects [ Item ] [ "Enabled" ] = E
    ##########################################################################
    return
  ############################################################################
  def ElementsMenu           ( self , mm                                   ) :
    ##########################################################################
    MSG = self . getMenuItem ( "DisplayObjects"                              )
    LOM = mm   . addMenu     ( MSG                                           )
    ##########################################################################
    E   = self . FaceObjects [ "Texture"    ] [ "Enabled"                    ]
    msg = self . getMenuItem ( "DisplayTextured"                             )
    mm  . addActionFromMenu  ( LOM , 54233101 , msg , True , E               )
    ##########################################################################
    E   = self . FaceObjects [ "Points"     ] [ "Enabled"                    ]
    msg = self . getMenuItem ( "DisplayPoints"                               )
    mm  . addActionFromMenu  ( LOM , 54233102 , msg , True , E               )
    ##########################################################################
    E   = self . FaceObjects [ "Mesh"       ] [ "Enabled"                    ]
    msg = self . getMenuItem ( "DisplayLines"                                )
    mm  . addActionFromMenu  ( LOM , 54233103 , msg , True , E               )
    ##########################################################################
    E   = self . FaceObjects [ "Face"       ] [ "Enabled"                    ]
    msg = self . getMenuItem ( "DisplayFace"                                 )
    mm  . addActionFromMenu  ( LOM , 54233104 , msg , True , E               )
    ##########################################################################
    E   = self . FaceObjects [ "Plate"      ] [ "Enabled"                    ]
    msg = self . getMenuItem ( "DisplayPlate"                                )
    mm  . addActionFromMenu  ( LOM , 54233105 , msg , True , E               )
    ##########################################################################
    return mm
  ############################################################################
  def RunElementsMenu             ( self , at                              ) :
    ##########################################################################
    if                            ( at == 54233101                         ) :
      ########################################################################
      self . SwitchDisplayElement ( "Texture"                               )
      ########################################################################
      return
    ##########################################################################
    if                            ( at == 54233102                         ) :
      ########################################################################
      self . SwitchDisplayElement ( "Points"                                 )
      ########################################################################
      return
    ##########################################################################
    if                            ( at == 54233103                         ) :
      ########################################################################
      self . SwitchDisplayElement ( "Mesh"                                   )
      ########################################################################
      return
    ##########################################################################
    if                            ( at == 54233104                         ) :
      ########################################################################
      self . SwitchDisplayElement ( "Face"                                   )
      ########################################################################
      return
    ##########################################################################
    if                            ( at == 54233105                         ) :
      ########################################################################
      self . SwitchDisplayElement ( "Plate"                                  )
      ########################################################################
      return
    ##########################################################################
    return False
  ############################################################################
  def Menu                         ( self , pos                            ) :
    ##########################################################################
    doMenu = self . isFunction     ( self . HavingMenu                       )
    if                             ( not doMenu                            ) :
      return False
    ##########################################################################
    self   . Notify                ( 0                                       )
    ##########################################################################
    mm     = MenuManager           ( self                                    )
    ##########################################################################
    TRX    = self . Translations
    ##########################################################################
    """
    msg    = TRX                   [ "UI::Refresh"                           ]
    icon   = QIcon                 ( ":/images/reload.png"                   )
    mm     . addActionWithIcon     ( 1001 , icon , msg                       )
    """
    ##########################################################################
    ## self   . ElementsMenu          ( mm                                      )
    self   . DockingMenu           ( mm                                      )
    ##########################################################################
    mm     . setFont               ( self    . menuFont ( )                  )
    aa     = mm . exec_            ( QCursor . pos      ( )                  )
    at     = mm . at               ( aa                                      )
    ##########################################################################
    """
    if                             ( self . RunElementsMenu ( at )         ) :
      return True
    """
    ##########################################################################
    if                             ( self . RunDocking   ( mm , aa )       ) :
      return True
    ##########################################################################
    if                             ( at == 1001                            ) :
      ########################################################################
      ########################################################################
      return True
    ##########################################################################
    return True
##############################################################################
