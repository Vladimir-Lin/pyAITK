# -*- coding: utf-8 -*-
##############################################################################
## AITK Model File
##############################################################################
import os
import sys
import getopt
import time
import requests
import threading
import gettext
import json
import math
import vtk
##############################################################################
from   AITK  . Math . Geometry . ControlPoint import ControlPoint as ControlPoint
from   AITK  . Math . Geometry . Contour      import Contour      as Contour
from   AITK  . Math . Geometry . Circle       import Circle       as Circle
from   AITK  . Math . Geometry . Cylinder     import Cylinder     as Cylinder
from   AITK  . Math . Geometry . Plane        import Plane        as Plane
from   AITK  . Math . Geometry . Parabola     import Parabola     as Parabola
from   AITK  . Math . Geometry . Sphere       import Sphere       as Sphere
from   AITK  . Math . Geometry . Polyhedron   import Polyhedron   as Polyhedron
##############################################################################
class Model    (                                                           ) :
  ############################################################################
  def __init__ ( self                                                      ) :
    ##########################################################################
    ##########################################################################
    return
  ############################################################################
  ## 座標參數轉到JSON
  ############################################################################
  def PointToJSON ( self , POINT                                           ) :
    return        { "X" : POINT [ 0 ]                                      , \
                    "Y" : POINT [ 1 ]                                      , \
                    "Z" : POINT [ 2 ]                                        }
  ############################################################################
  ## 相機參數轉到JSON
  ############################################################################
  def CameraToJSON             ( self , CAMERA                             ) :
    ##########################################################################
    p = CAMERA . GetPosition   (                                             )
    f = CAMERA . GetFocalPoint (                                             )
    u = CAMERA . GetViewUp     (                                             )
    d = CAMERA . GetDistance   (                                             )
    r = CAMERA . GetRoll       (                                             )
    a = CAMERA . GetViewAngle  (                                             )
    ##########################################################################
    return { "Position"  : self . PointToJSON ( p )                        , \
             "Focal"     : self . PointToJSON ( f )                        , \
             "Up"        : self . PointToJSON ( u )                        , \
             "Distance"  : d                                               , \
             "Roll"      : r                                               , \
             "ViewAngle" : a                                                 }
  ############################################################################
  ## 抓取vtkDataSet點數據
  ############################################################################
  def dsToPoints                   ( self , DS                             ) :
    ##########################################################################
    LL    =                        [                                         ]
    PTS   = DS . GetNumberOfPoints (                                         )
    ##########################################################################
    SAT   = 0
    ##########################################################################
    while                          ( SAT < PTS                             ) :
      ########################################################################
      LL  . append                 ( DS . GetPoint ( SAT )                   )
      ########################################################################
      SAT = SAT + 1
    ##########################################################################
    return LL
  ############################################################################
  ## 抓取vtkDataSet頂點列表
  ############################################################################
  def dsCellToEdges              ( self , CELL                             ) :
    ##########################################################################
    EE   =                       [                                           ]
    PV   = CELL . GetPointIds    (                                           )
    PC   = PV   . GetNumberOfIds (                                           )
    ##########################################################################
    AP   = 0
    ##########################################################################
    while                        ( AP < PC                                 ) :
      ########################################################################
      EE . append                ( PV . GetId ( AP )                         )
      ########################################################################
      AP = AP + 1
    ##########################################################################
    return EE
  ############################################################################
  def dsToEdges                   ( self , DS                              ) :
    ##########################################################################
    FF    =                       [                                          ]
    CETS  = DS . GetNumberOfCells (                                          )
    ##########################################################################
    SAT   = 0
    ##########################################################################
    while                         ( SAT < CETS                             ) :
      ########################################################################
      EE  = self . dsCellToEdges  ( DS . GetCell ( SAT )                     )
      FF  . append                ( EE                                       )
      ########################################################################
      SAT = SAT + 1
    ##########################################################################
    return FF
  ############################################################################
  def dsToJSON            ( self , DS                                      ) :
    ##########################################################################
    C = DS   . GetCenter  (                                                  )
    B = DS   . GetBounds  (                                                  )
    ##########################################################################
    L = DS   . GetLength  (                                                  )
    R = DS   . GetLength2 (                                                  )
    ##########################################################################
    P = self . dsToPoints ( DS                                               )
    F = self . dsToEdges  ( DS                                               )
    ##########################################################################
    return                { "Length"      : L                              , \
                            "L2"          : R                              , \
                            "Center"      : C                              , \
                            "Boundings"   : B                              , \
                            "TotalPoints" : len ( P )                      , \
                            "TotalFaces"  : len ( F )                      , \
                            "Points"      : P                              , \
                            "Faces"       : F                                }
  ############################################################################
  ## Actor轉換到JSON
  ############################################################################
  def ActorToJSON         ( self , actor                                   ) :
    ##########################################################################
    M = actor . GetMapper (                                                  )
    X = actor . GetMatrix (                                                  )
    J = self  . dsToJSON  ( M . GetInput (                                 ) )
    ##########################################################################
    Z =                   [                                                  ]
    ##########################################################################
    for   i in range      ( 0 , 4                                          ) :
      for j in range      ( 0 , 4                                          ) :
        ######################################################################
        Z . append        ( X . GetElement ( i , j )                         )
    ##########################################################################
    return                { "Length"      : J [ "Length"      ]            , \
                            "L2"          : J [ "L2"          ]            , \
                            "Center"      : J [ "Center"      ]            , \
                            "Boundings"   : J [ "Boundings"   ]            , \
                            "Transform"   : Z                              , \
                            "TotalPoints" : J [ "TotalPoints" ]            , \
                            "TotalFaces"  : J [ "TotalFaces"  ]            , \
                            "Points"      : J [ "Points"      ]            , \
                            "Faces"       : J [ "Faces"       ]              }
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
##############################################################################
