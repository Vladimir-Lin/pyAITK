# -*- coding: utf-8 -*-
##############################################################################
## 台灣大樂透分布計算元件
##############################################################################
import os
import sys
import getopt
import time
import datetime
import logging
import requests
import threading
import gettext
import json
import codecs
import random
import numpy
import scipy
from   scipy . optimize                import curve_fit as CurveFit
##############################################################################
class TblDistribution         (                                            ) :
  ############################################################################
  def __init__                ( self                                       ) :
    ##########################################################################
    self . clear              (                                              )
    ##########################################################################
    return
  ############################################################################
  def __del__                 ( self                                       ) :
    return
  ############################################################################
  def clear                  ( self                                        ) :
    ##########################################################################
    self . Balls      = 6
    self . Items      = 0
    self . Maps       =      {                                               }
    self . Statistics =      {                                               }
    ##########################################################################
    return
  ############################################################################
  def assign                 ( self , maps , Balls = 6                     ) :
    ##########################################################################
    self . Balls      = Balls
    self . Items      = len ( maps )
    self . Maps       = maps
    self . Statistics =      {                                               }
    self . reset             (                                               )
    ##########################################################################
    return
  ############################################################################
  def balls                  ( self                                        ) :
    return self . Balls
  ############################################################################
  def items                  ( self                                        ) :
    return self . Items
  ############################################################################
  def GetMaps                ( self                                        ) :
    return self . Maps
  ############################################################################
  def reset                  ( self                                        ) :
    ##########################################################################
    for i in range           ( 0 , self . Items                            ) :
      self . Statistics [ i ] = 0
    ##########################################################################
    return
  ############################################################################
  def AllSums                ( self , Maps                                 ) :
    ##########################################################################
    v       = 0
    total   = len            ( Maps                                          )
    ##########################################################################
    KEYs    = Maps . keys    (                                               )
    for i in KEYs                                                            :
      v     = int            ( Maps [ i ]                                    )
    ##########################################################################
    return v
  ############################################################################
  def Total                  ( self                                        ) :
    return self . AllSums    ( self . Maps                                   )
  ############################################################################
  def summary                ( self , total , values                       ) :
    ##########################################################################
    for i in range           ( 0 , total                                   ) :
      n = values             [ i                                             ]
      self . Statistics [ n ] = self . Statistics [ n ] + 1
    ##########################################################################
    return
##############################################################################
