# -*- coding: utf-8 -*-
##############################################################################
## 影片資訊數據中心
##############################################################################
import os
import sys
import time
import datetime
import threading
import json
##############################################################################
import mysql . connector
from   mysql . connector              import Error
##############################################################################
import AITK
##############################################################################
from   AITK  . Calendars . StarDate   import StarDate
##############################################################################
from   AITK  . Database  . Query      import Query
from   AITK  . Database  . Connection import Connection
from   AITK  . Database  . Pair       import Pair
from   AITK  . Database  . Columns    import Columns
##############################################################################
from                     . Film       import Film as FilmItem
##############################################################################
class FilmCenter         (                                                 ) :
  ############################################################################
  def __init__           ( self                                            ) :
    ##########################################################################
    self . Settings          = {                                             }
    self . DbConf            = {                                             }
    ##########################################################################
    self . Handler           = None
    self . SendMessage       = None
    self . LOG               = None
    self . DbCheck           = 0
    self . Ready             = False
    ##########################################################################
    self . DB                = Connection       (                            )
    self . DbLocker          = threading . Lock (                            )
    self . QueryLocker       = threading . Lock (                            )
    ##########################################################################
    return
  ############################################################################
  def __del__ ( self                                                       ) :
    return
  ############################################################################
  def setSettings ( self , SETTINGS , DBCONF                               ) :
    ##########################################################################
    self . Settings = SETTINGS
    self . DbConf   = DBCONF
    ##########################################################################
    return
  ############################################################################
  def ConnectDB                ( self , UsePure = False                    ) :
    ##########################################################################
    OK = self . DB . ConnectTo ( self . DbConf , UsePure                     )
    ##########################################################################
    if                         ( not OK                                    ) :
      return False
    ##########################################################################
    self . DB . Prepare        (                                             )
    ##########################################################################
    return   True
  ############################################################################
  def CloseDB              ( self                                          ) :
    ##########################################################################
    self . DB . Close      (                                                 )
    self . DB = Connection (                                                 )
    ##########################################################################
    return
  ############################################################################
  def isDbConnected                ( self                                  ) :
    return self . DB . isConnected (                                         )
  ############################################################################
  def AssureDB                     ( self                                  ) :
    ##########################################################################
    NOW  = StarDate                (                                         )
    NOW  . Now                     (                                         )
    CDT  = int                     ( NOW . Stardate                          )
    ZDT  = int                     ( CDT - self . DbCheck                    )
    ##########################################################################
    if                             ( ZDT < 60                              ) :
      return True
    ##########################################################################
    self . DbCheck = CDT
    ##########################################################################
    OK   = self . DB . isConnected (                                         )
    ##########################################################################
    if                             ( OK                                    ) :
      return True
    ##########################################################################
    return self . ConnectDB        (                                         )
  ############################################################################
  def Prepare                            ( self                            ) :
    ##########################################################################
    OK         = self . DB . isConnected (                                   )
    ##########################################################################
    if                                   ( not OK                          ) :
      return
    ##########################################################################
    NOW        = StarDate                (                                   )
    NOW        . Now                     (                                   )
    CDT        = NOW . Stardate
    ##########################################################################
    self . DbLocker . acquire            (                                   )
    ##########################################################################
    ##########################################################################
    self . DbLocker . release            (                                   )
    ##########################################################################
    self . Ready    = True
    ##########################################################################
    return
  ############################################################################
  def Process           ( self                                             ) :
    ##########################################################################
    ##########################################################################
    return
  ############################################################################
  def RpcHandler ( self , J , ADDR                                         ) :
    ##########################################################################
    ANSWER =     { "Answer" : "Yes" , "IP"       : ADDR                      }
    RESP   =     { "Answer" : 202   , "Response" : ANSWER                    }
    ##########################################################################
    if           ( "Action" not in J                                       ) :
      return RESP
    ##########################################################################
    ACTION = J   [ "Action"                                                  ]
    ##########################################################################
    ##########################################################################
    ##########################################################################
    return RESP
##############################################################################
