# -*- coding: utf-8 -*-
##############################################################################
## Fragment
## 影片段落
##############################################################################
import os
import sys
import getopt
import time
import datetime
import requests
import threading
##############################################################################
import mysql . connector
from   mysql . connector                   import Error
##############################################################################
import AITK
from   AITK  . Database   . Query          import Query
from   AITK  . Database   . Connection     import Connection
from   AITK  . Database   . Pair           import Pair
from   AITK  . Database   . Columns        import Columns
##############################################################################
from   AITK  . Documents  . ParameterQuery import ParameterQuery as ParameterQuery
from   AITK  . Essentials . Relation       import Relation       as Relation
##############################################################################
FRAGREL           = "`cios`.`relations_videos`"
FRAGNAM           = "`appellations`.`names_others_0016`"
FragmentShortType = 213
FragmentLongType  = 1100000000000000213
FragmentTypeName  = "vFragment"
##############################################################################
class Fragment           ( Columns                                         ) :
  ############################################################################
  def __init__           ( self                                            ) :
    ##########################################################################
    super ( ) . __init__ (                                                   )
    self      . Clear    (                                                   )
    ##########################################################################
    return
  ############################################################################
  def __del__ ( self                                                       ) :
    ##########################################################################
    ##########################################################################
    return
  ############################################################################
  def Clear              ( self                                            ) :
    ##########################################################################
    self . Columns     = [                                                   ]
    self . Id          =  -1
    self . Uuid        =   0
    self . Used        =   1
    self . States      =   0
    self . Description = {                                                   }
    self . ltime       =   0
    ##########################################################################
    self . PeopleUuid =   0
    ##########################################################################
    return
  ############################################################################
  def assign ( self , item                                                 ) :
    ##########################################################################
    self . Columns     = item . Columns
    self . Id          = item . Id
    self . Uuid        = item . Uuid
    self . Used        = item . Used
    self . States      = item . States
    self . Description = item . Description
    self . ltime       = item . ltime
    ##########################################################################
    return
  ############################################################################
  def set            ( self , item , value                                 ) :
    ##########################################################################
    a = item . lower (                                                       )
    ##########################################################################
    if               ( "id"          == a                                  ) :
      self . Id        = value
    ##########################################################################
    elif             ( "uuid"        == a                                  ) :
      self . Uuid      = value
    ##########################################################################
    elif             ( "used"        == a                                  ) :
      self . Used     = value
    ##########################################################################
    elif             ( "states"      == a                                  ) :
      self . States      = value
    ##########################################################################
    elif             ( "description" == a                                  ) :
      ########################################################################
      if             ( isinstance ( value , dict                         ) ) :
        ######################################################################
        self . Description   = value
        ######################################################################
      elif           ( isinstance ( value , str                          ) ) :
        ######################################################################
        try                                                                  :
          ####################################################################
          self . Description = json . loads ( value                          )
          ####################################################################
        except                                                               :
          pass
        ######################################################################
      elif           ( isinstance ( value , bytearray                    ) ) :
        ######################################################################
        try                                                                  :
          ####################################################################
          BODY = value . decode ( "utf-8"                                    )
          self . Description = json . loads ( BODY                           )
          ####################################################################
        except                                                               :
          pass
    ##########################################################################
    elif             ( "ltime"     == a                                    ) :
      self . ltime     = value
    ##########################################################################
    return
  ############################################################################
  def get            ( self , item                                         ) :
    ##########################################################################
    a = item . lower (                                                       )
    ##########################################################################
    if               ( "id"          == a                                  ) :
      return self . Id
    ##########################################################################
    if               ( "uuid"        == a                                  ) :
      return self . Uuid
    ##########################################################################
    if               ( "used"        == a                                  ) :
      return self . Used
    ##########################################################################
    if               ( "states"      == a                                  ) :
      return self . States
    ##########################################################################
    if               ( "description" == a                                  ) :
      return self . Description
    ##########################################################################
    if               ( "ltime"       == a                                  ) :
      return self . ltime
    ##########################################################################
    return ""
  ############################################################################
  def tableItems        ( self                                             ) :
    return [ "id"                                                            ,
             "uuid"                                                          ,
             "used"                                                          ,
             "states"                                                        ,
             "description"                                                   ,
             "ltime"                                                         ]
  ############################################################################
  def pair              ( self , item                                      ) :
    v = self . get      (        item                                        )
    return f"`{item}` = {v}"
  ############################################################################
  def valueItems        ( self                                             ) :
    return [ "used"                                                          ,
             "states"                                                        ,
             "description"                                                   ]
  ############################################################################
  def toJson ( self                                                        ) :
    return   { "Id"          : self . Id                                   , \
               "Uuid"        : self . Uuid                                 , \
               "Used"        : self . Used                                 , \
               "States"      : self . States                               , \
               "Description" : self . Description                            }
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
##############################################################################
