# -*- coding: utf-8 -*-
##############################################################################
## 進度報告
##############################################################################
import os
import sys
import getopt
import time
import datetime
import requests
import threading
##############################################################################
from   AITK . Calendars . StarDate import StarDate
##############################################################################
globalVirtualProgress = None
##############################################################################
class ProgressReporter        (                                            ) :
  ############################################################################
  StateStop     = 0
  StateRunning  = 1
  StatePause    = 2
  StateResume   = 3
  StateStopping = 4
  ############################################################################
  def __init__                ( self                                       ) :
    ##########################################################################
    NOW  = StarDate           (                                              )
    NOW  . Now                (                                              )
    ##########################################################################
    self . Name         = ""
    self . Format       = ""
    self . StartTime    = NOW . Stardate
    self . TotalAmount  = 0
    self . CurrentValue = 0
    self . Users        = 0
    self . State        = 0
    self . Id           = -1
    self . Running      = False
    self . Mutex        = threading . Lock (                                 )
    ##########################################################################
    return
  ############################################################################
  def __del__                 ( self                                       ) :
    return
  ############################################################################
  def getValue                ( self                                       ) :
    return self . CurrentValue
  ############################################################################
  def getRunning              ( self                                       ) :
    return self . Running
  ############################################################################
  def setRunning               ( self , enable                             ) :
    ##########################################################################
    self   . Mutex   . acquire (                                             )
    ##########################################################################
    self   . Running = enable
    ##########################################################################
    if                         ( enable                                    ) :
      self . State   = self . StateRunning
    else                                                                     :
      self . State   = self . StateStopping
    ##########################################################################
    self   . Mutex   . release (                                             )
    ##########################################################################
    return
  ############################################################################
  def Using                ( self                                          ) :
    ##########################################################################
    self . Mutex . acquire (                                                 )
    self . Users = self   . Users + 1
    self . Mutex . release (                                                 )
    ##########################################################################
    return
  ############################################################################
  def Leaving              ( self                                          ) :
    ##########################################################################
    self . Mutex . acquire (                                                 )
    self . Users = self   . Users - 1
    self . Mutex . release (                                                 )
    ##########################################################################
    return
  ############################################################################
  def setVirtual           ( self , vpo                                    ) :
    ##########################################################################
    global globalVirtualProgress
    ##########################################################################
    globalVirtualProgress = vpo
    ##########################################################################
    return
  ############################################################################
  def Progress                ( self , name , Format                       ) :
    ##########################################################################
    global globalVirtualProgress
    ##########################################################################
    if                        ( globalVirtualProgress == None              ) :
      return -1
    ##########################################################################
    if                        ( self . Id < 0                              ) :
      return -1
    ##########################################################################
    self . Id = globalVirtualProgress . Progress ( name , Format             )
    ##########################################################################
    return self . Id
  ############################################################################
  def ProgressName                       ( self , name                     ) :
    ##########################################################################
    global globalVirtualProgress
    ##########################################################################
    if                                   ( globalVirtualProgress == None   ) :
      return
    ##########################################################################
    if                                   ( self . Id < 0                   ) :
      return
    ##########################################################################
    globalVirtualProgress . ProgressName ( self . Id , name                  )
    ##########################################################################
    return
  ############################################################################
  def ProgressText                       ( self , message                  ) :
    ##########################################################################
    global globalVirtualProgress
    ##########################################################################
    if                                   ( globalVirtualProgress == None   ) :
      return
    ##########################################################################
    if                                   ( self . Id < 0                   ) :
      return
    ##########################################################################
    globalVirtualProgress . ProgressText ( self . Id , message               )
    ##########################################################################
    return
  ############################################################################
  def setProgress                       ( self , Format                    ) :
    ##########################################################################
    global globalVirtualProgress
    ##########################################################################
    if                                  ( globalVirtualProgress == None    ) :
      return
    ##########################################################################
    if                                  ( self . Id < 0                    ) :
      return
    ##########################################################################
    globalVirtualProgress . setProgress ( self . Id , Format                 )
    ##########################################################################
    return
  ############################################################################
  def setRange                       ( self , Min , Max                    ) :
    ##########################################################################
    global globalVirtualProgress
    ##########################################################################
    if                               ( globalVirtualProgress == None       ) :
      return
    ##########################################################################
    if                               ( self . Id < 0                       ) :
      return
    ##########################################################################
    globalVirtualProgress . setRange ( self . Id , Min , Max                 )
    ##########################################################################
    return
  ############################################################################
  def setFrequency            ( self , cFmt , rFmt                         ) :
    ##########################################################################
    global globalVirtualProgress
    ##########################################################################
    if                        ( globalVirtualProgress == None              ) :
      return
    ##########################################################################
    if                        ( self . Id < 0                              ) :
      return
    ##########################################################################
    globalVirtualProgress . setFrequency ( self . Id , cFmt , rFmt           )
    ##########################################################################
    return
  ############################################################################
  def StartMe                     ( self                                   ) :
    ##########################################################################
    global globalVirtualProgress
    ##########################################################################
    if                            ( globalVirtualProgress == None          ) :
      return
    ##########################################################################
    if                            ( self . Id < 0                          ) :
      return
    ##########################################################################
    self . Running = True
    globalVirtualProgress . Start ( self . Id                              , \
                                    self . getValue                        , \
                                    self . getRunning                        )
    ##########################################################################
    return
  ############################################################################
  def Start                       ( self , ValueFunc , RunningFunc         ) :
    ##########################################################################
    global globalVirtualProgress
    ##########################################################################
    if                            ( globalVirtualProgress == None          ) :
      return
    ##########################################################################
    if                            ( self . Id < 0                          ) :
      return
    ##########################################################################
    globalVirtualProgress . Start ( self . Id , ValueFunc , RunningFunc      )
    ##########################################################################
    return 
  ############################################################################
  def Finish                  ( self                                       ) :
    ##########################################################################
    global globalVirtualProgress
    ##########################################################################
    if                        ( globalVirtualProgress == None              ) :
      return
    ##########################################################################
    if                        ( self . Id < 0                              ) :
      return
    ##########################################################################
    globalVirtualProgress . Finish ( self . Id )
    self . Id = -1
    ##########################################################################
    return
  ############################################################################
  def ProgressReady           ( self , msecs = 1000                   ) :
    ##########################################################################
    global globalVirtualProgress
    ##########################################################################
    if                        ( globalVirtualProgress == None              ) :
      return False
    ##########################################################################
    if                        ( self . Id < 0                              ) :
      return False
    ##########################################################################
    return globalVirtualProgress . ProgressReady ( self . Id , msecs         )
  ############################################################################
  def plus                    ( self                                       ) :
    ##########################################################################
    self . CurrentValue = self . CurrentValue + 1
    ##########################################################################
    return self . CurrentValue
##############################################################################
