# -*- coding: utf-8 -*-
##############################################################################
## Foxman代理人
##############################################################################
import os
import sys
import subprocess
import getopt
import time
import datetime
import logging
import requests
import threading
import gettext
import shutil
import json
##############################################################################
from . ScheduleNotifier import ScheduleNotifier as ScheduleNotifier
##############################################################################
## Foxman智能回應程式
##############################################################################
class FoxmanRobot (                                                        ) :
  ############################################################################
  def __init__         ( self , jsonFile = ""                              ) :
    ##########################################################################
    self . DebugLogger   = None
    self . Talk          = None
    self . Reboot        = None
    self . StopIt        = None
    self . State         = 0
    self . CurrentDir    = ""
    self . Beau          = "Foxman"
    self . PullCommand   = ""
    self . PushCommand   = ""
    self . tblHost       = "http://insider.actions.com.tw:8364"
    self . sohoHost      = "http://soho.actions.com.tw:8364"
    self . tblSerial     = ""
    self . CalendarsFile = ""
    self . Scheduler     = None
    ##########################################################################
    self . Configure   (        jsonFile                                     )
    ##########################################################################
    self . tblPaperX    = self . JSON [ "Paper" ] [ "X"      ]
    self . tblPaperY    = self . JSON [ "Paper" ] [ "Y"      ]
    self . tblPaperGap  = self . JSON [ "Paper" ] [ "Gap"    ]
    self . tblPaperW    = self . JSON [ "Paper" ] [ "Width"  ]
    self . tblPaperH    = self . JSON [ "Paper" ] [ "Height" ]
    self . tblPaperL    = self . JSON [ "Paper" ] [ "Length" ]
    self . tblPaperText = self . JSON [ "Paper" ] [ "Text"   ]
    ##########################################################################
    return
  ############################################################################
  def __del__    ( self                                                    ) :
    return
  ############################################################################
  def Configure            ( self , jsonFile = ""                          ) :
    ##########################################################################
    self . JsonFile = f"{jsonFile}"
    ##########################################################################
    return self . LoadJSON (                                                 )
  ############################################################################
  ## 載入設定
  ############################################################################
  def LoadJSON   ( self                                                    ) :
    ##########################################################################
    self  . JSON = { }
    J            = self  . JsonFile
    ##########################################################################
    if                          ( len ( J ) <= 0                           ) :
      return False
    ##########################################################################
    if                          ( not os . path . isfile ( J )             ) :
      return False
    ##########################################################################
    T     = ""
    try                                                                      :
      with open                 ( J , "rb" ) as F                            :
        T = F . read            (                                            )
    except                                                                   :
      return False
    ##########################################################################
    if                          ( len ( T ) <= 0                           ) :
      return False
    ##########################################################################
    BODY     = T . decode       ( "utf-8"                                    )
    if                          ( len ( BODY ) <= 0                        ) :
      return False
    ##########################################################################
    self  . JSON = json . loads ( BODY                                       )
    ##########################################################################
    return True
  ############################################################################
  ## 儲存設定
  ############################################################################
  def StoreJSON  ( self                                                    ) :
    ##########################################################################
    if           ( len ( self . JsonFile ) <= 0                            ) :
      return False
    ##########################################################################
    try                                                                      :
      with     open ( self . JsonFile , 'w' , encoding = 'utf-8' ) as f      :
        json . dump ( self  . JSON , f , ensure_ascii = False , indent = 2   )
    except                                                                   :
      return False
    ##########################################################################
    return True
  ############################################################################
  ## 除錯訊息
  ############################################################################
  def debug                        ( self , message , way = "info"         ) :
    ##########################################################################
    Logger   = self . DebugLogger
    ##########################################################################
    if                             ( Logger == None                        ) :
      return
    ##########################################################################
    if                             ( way == "debug"                        ) :
      Logger . debug               ( message                                 )
    elif                           ( way == "info"                         ) :
      Logger . info                ( message                                 )
    ##########################################################################
    return
  ############################################################################
  ## 重啟機器人運作
  ############################################################################
  def RebootRobot             ( self                                       ) :
    ##########################################################################
    if                        ( self . Scheduler != None                   ) :
      self . Scheduler . Stop (                                              )
    ##########################################################################
    self . Reboot             (                                              )
    ##########################################################################
    return
  ############################################################################
  ## 停止機器人運作
  ############################################################################
  def StopRobot               ( self                                       ) :
    ##########################################################################
    if                        ( self . Scheduler != None                   ) :
      self . Scheduler . Stop (                                              )
    ##########################################################################
    self . StopIt             (                                              )
    ##########################################################################
    return
  ############################################################################
  ## 啟動行事曆運作細節
  ############################################################################
  def BootupCalendar                    ( self                             ) :
    ##########################################################################
    if                                  ( self . Scheduler != None         ) :
      return
    ##########################################################################
    self . Scheduler = ScheduleNotifier ( self . CalendarsFile               )
    self . Scheduler . Talk        = self . Talk
    self . Scheduler . DebugLogger = self . DebugLogger
    self . Scheduler . Start            (                                    )
    ##########################################################################
    return
  ############################################################################
  ## 準備行事曆運作細節
  ############################################################################
  def PrepareCalendar         ( self                                       ) :
    ##########################################################################
    time . sleep              ( 10.0                                         )
    self . BootupCalendar     (                                              )
    ##########################################################################
    return
  ############################################################################
  ## 準備機器人運作細節
  ############################################################################
  def Preparation             ( self                                       ) :
    ##########################################################################
    threading . Thread        ( target = self . PrepareCalendar ) . start (  )
    ##########################################################################
    return
  ############################################################################
  ## RPC解譯器
  ############################################################################
  def HttpParser      ( self , Path , Headers , JSON                       ) :
    ##########################################################################
    if                ( "/Robot" == Path                                   ) :
      ########################################################################
      if              ( "Stop" == JSON [ "Action" ]                        ) :
        ######################################################################
        threading . Thread ( target = self . StopRobot   ) . start (         )
        ######################################################################
        return             { "Process" : True                                ,
                             "Result"  : { "Answer"   : 200                  ,
                                           "Response" :                      {
                                            "Answer"  : "Yes"            } } }
      ########################################################################
      if              ( "Reboot" == JSON [ "Action" ]                      ) :
        ######################################################################
        threading . Thread ( target = self . RebootRobot ) . start (         )
        ######################################################################
        return             { "Process" : True                                ,
                             "Result"  : { "Answer"   : 200                  ,
                                           "Response" :                      {
                                            "Answer"  : "Yes"            } } }
      ########################################################################
      return          { "Process" : True                                     ,
                        "Result"  : { "Answer"   : 200                       ,
                                      "Response" :                           {
                                      "Answer"   : "Yes"                 } } }
    ##########################################################################
    if                ( "/Command" == Path                                 ) :
      ########################################################################
      threading . Thread ( target = self . GoCommand                       , \
                           args   = ( JSON , )                   ) . start ( )
      ########################################################################
      return          { "Process" : True                                     ,
                        "Result"  : { "Answer"   : 200                       ,
                                      "Response" :                           {
                                      "Answer"   : "Yes"                 } } }
    ##########################################################################
    if                ( self . Scheduler != None                           ) :
      R = self . Scheduler . HttpParser ( Path , Headers , JSON              )
      if              ( R [ "Process" ]                                    ) :
        return R
    ##########################################################################
    JSOZ = json.dumps ( JSON                                                 )
    self . debug      ( f"AI Http Parser : '{Path}' - {JSOZ}"                )
    ##########################################################################
    return            { "Process" : False                                    }
  ############################################################################
  ## 發送到Skype
  ############################################################################
  def ActualTalkTo                 ( self , beau , message                 ) :
    ##########################################################################
    if                             ( self . Talk == None                   ) :
      return False
    ##########################################################################
    time . sleep                   ( 1.0                                     )
    self . Talk                    ( beau , message                          )
    ##########################################################################
    return True
  ############################################################################
  ## 分支發送到Skype
  ############################################################################
  def TalkTo                       ( self , beau , message                 ) :
    threading . Thread             ( target = self . ActualTalkTo          , \
                                     args = ( beau , message , ) ) . start ( )
    return True
  ############################################################################
  ## 執行命令
  ############################################################################
  def GoCommand                    ( self , JSON                           ) :
    ##########################################################################
    self . RunCommand              ( JSON [ "Command" ]                      )
    ##########################################################################
    return True
  ############################################################################
  ## 根據聊天狀態分配任務
  ############################################################################
  def Reply                        ( self , beau , message                 ) :
    ##########################################################################
    self . debug                   ( f"Get Replied for '{beau}' : {message}" )
    ##########################################################################
    ## 無任務
    ##########################################################################
    if                             ( self . State ==  0                    ) :
      self . IdleState             (        beau , message                   )
      return True
    ##########################################################################
    ## 互動模式
    ##########################################################################
    if                             ( self . State ==  1                    ) :
      self . BasicMode             (        beau , message                   )
      return True
    ##########################################################################
    ## 台灣大樂透
    ##########################################################################
    if                             ( self . State == 11                    ) :
      self . tblMode               (        beau , message                   )
      return True
    ##########################################################################
    ## 台灣大樂透投注
    ##########################################################################
    if                             ( self . State == 12                    ) :
      self . tblBettings           (        beau , message                   )
      return True
    ##########################################################################
    ## 行事曆模式
    ##########################################################################
    if                             ( self . State == 21                    ) :
      self . CalendarMode          (        beau , message                   )
      return True
    ##########################################################################
    ## 行事曆:標題
    ##########################################################################
    if                             ( self . State == 22                    ) :
      self . CalendarTitle         (        beau , message                   )
      return True
    ##########################################################################
    ## 行事曆:描述
    ##########################################################################
    if                             ( self . State == 23                    ) :
      self . CalendarDescription   (        beau , message                   )
      return True
    ##########################################################################
    return True
  ############################################################################
  ## 無任務
  ############################################################################
  def IdleState                    ( self , beau , message                 ) :
    ##########################################################################
    s    = message . lower         (                                         )
    s    = s       . rstrip        (                                         )
    beau = "Idle"
    STAS = "Startup"
    CALS = "Calendars"
    TBLS = "Taiwan-Big-Lottery"
    ##########################################################################
    ## 互動
    ##########################################################################
    if   ( s in self . JSON [ "Commands" ] [ STAS ] [ "Allows" ] )           :
      ########################################################################
      self . State = 1
      MSG          = self . JSON [ "Commands" ] [ STAS ] [ "Welcome" ]
      self . TalkTo                ( self . Beau , MSG                       )
      ########################################################################
      return True
    ##########################################################################
    ## 行事曆
    ##########################################################################
    if ( s in self . JSON [ "Commands" ] [ CALS ] [ "Allows" ] )             :
      ########################################################################
      self . StartCalendar         (                                         )
      ########################################################################
      return True
    ##########################################################################
    ## 大樂透
    ##########################################################################
    if ( s in self . JSON [ "Commands" ] [ TBLS ] [ "Allows" ] )             :
      self . State = 11
      MSG          = self . JSON [ "Commands" ] [ TBLS ] [ "Welcome" ]
      self . TalkTo                ( self . Beau , MSG                       )
      return True
    ##########################################################################
    return True
  ############################################################################
  ## 互動模式
  ############################################################################
  def BasicMode                    ( self , beau , message                 ) :
    ##########################################################################
    ##
    ##########################################################################
    s    = message . lower         (                                         )
    s    = s       . rstrip        (                                         )
    L    = s       . split         ( ' '                                     )
    CNT  = len                     ( L                                       )
    beau = "Basic"
    ##########################################################################
    ## 重新啟動
    ##########################################################################
    if ( s in self . JSON [ "Commands" ] [ "Reboot" ] [ "Allows" ] )         :
      ########################################################################
      self . RebootRobot           (                                         )
      ########################################################################
      return True
    ##########################################################################
    ## 中止程式
    ## 停止
    ##########################################################################
    if ( CNT == 1 ) and ( s in self . JSON [ "Commands" ] [ "Stop" ] [ "Allows" ] ) :
      ########################################################################
      self . StopRobot             (                                         )
      ########################################################################
      return True
    ##########################################################################
    ## 結束互動模式
    ## 結束
    ##########################################################################
    if ( s in self . JSON [ "Commands" ] [ "Finish" ] [ "Allows" ]         ) :
      ########################################################################
      self . State = 0
      MSG          = self . JSON [ "Commands" ] [ "Finish" ] [ "Welcome" ]
      self . TalkTo                ( beau , MSG                              )
      ########################################################################
      return True
    ##########################################################################
    ## 設定
    ##########################################################################
    if ( s in self . JSON [ "Commands" ] [ "Settings" ] [ "Allows" ]       ) :
      ########################################################################
      MSG = json . dumps           ( self . JSON , ensure_ascii = False      )
      self . TalkTo                ( "settings" , MSG                        )
      ########################################################################
      return True
    ##########################################################################
    if                             ( CNT <= 0                              ) :
      return True
    ##########################################################################
    if ( L [ 0 ] in self . JSON [ "Commands" ] [ "Current" ] [ "Allows" ]  ) :
      ########################################################################
      if ( CNT > 1                                                         ) :
        ######################################################################
        ## 當前目錄
        ######################################################################
        if ( L [ 1 ] in self . JSON [ "Commands" ] [ "Directory" ] [ "Allows" ] ) :
          ####################################################################
          self . OsGetCWD          (                                         )
          ####################################################################
          return True
    ##########################################################################
    ## 當前目錄
    ##########################################################################
    if ( L [ 0 ] in self . JSON [ "Commands" ] [ "PWD" ] [ "Allows" ]      ) :
      ########################################################################
      self     . OsGetCWD          (                                         )
      ########################################################################
      return True
    ##########################################################################
    ## 改變目錄
    ##########################################################################
    if                             ( L [ 0 ] == "chdir"                    ) :
      ########################################################################
      self . OsChdir               ( message [ 6 : ]                         )
      ########################################################################
      return True
    ##########################################################################
    ## 改變目錄
    ##########################################################################
    if                             ( L [ 0 ] == "cd"                       ) :
      ########################################################################
      self . OsChdir               ( message [ 3 : ]                         )
      ########################################################################
      return True
    ##########################################################################
    ## 列出檔案
    ##########################################################################
    if ( L [ 0 ] in self . JSON [ "Commands" ] [ "ListFiles" ] [ "Allows" ] ) :
      ########################################################################
      threading . Thread           ( target = self . ListFiles   ) . start ( )
      ########################################################################
      return True
    ##########################################################################
    ## 上傳系統
    ## 上傳
    ##########################################################################
    if ( L [ 0 ] in self . JSON [ "Commands" ] [ "CommitSystem" ] [ "Allows" ] ) :
      ########################################################################
      threading . Thread           ( target = self . PushSystem  ) . start ( )
      ########################################################################
      return True
    ##########################################################################
    ## 升級系統
    ## 升級
    ##########################################################################
    if ( L [ 0 ] in self . JSON [ "Commands" ] [ "UpgradeSystem" ] [ "Allows" ] ) :
      ########################################################################
      threading . Thread           ( target = self . PullSystem  ) . start ( )
      ########################################################################
      return True
    ##########################################################################
    ## 同步系統
    ## 同步
    ##########################################################################
    if ( L [ 0 ] in self . JSON [ "Commands" ] [ "SyncSystem" ] [ "Allows" ] ) :
      ########################################################################
      threading . Thread           ( target = self . SyncSystem  ) . start ( )
      ########################################################################
      return True
    ##########################################################################
    ## 執行本地命令
    ##########################################################################
    if                             ( L [ 0 ] in [ "dos" , "run" ]          ) :
      ########################################################################
      cmd       = message          [ 4:                                      ]
      threading . Thread           ( target = self . RunCommand            , \
                                     args = ( cmd , )            ) . start ( )
      ########################################################################
      return True
    ##########################################################################
    ## 執行本地命令
    ##########################################################################
    if                             ( L [ 0 ] == "command"                  ) :
      ########################################################################
      cmd       = message          [ 8:                                      ]
      threading . Thread           ( target = self . RunCommand            , \
                                     args = ( cmd , )            ) . start ( )
      ########################################################################
      return True
    ##########################################################################
    ## 載入設定
    ## 載入 設定
    ##########################################################################
    if ( L [ 0 ] in self . JSON [ "Commands" ] [ "Load" ] [ "Allows" ]     ) :
      if ( CNT > 1 ) and ( L [ 1 ] in self . JSON [ "Commands" ] [ "Settings" ] [ "Allows" ] ) :
        ######################################################################
        threading . Thread         ( target = self . LoadJSON    ) . start ( )
        ######################################################################
        return True
    ##########################################################################
    ## 儲存設定
    ## 儲存 設定
    ##########################################################################
    if ( L [ 0 ] in self . JSON [ "Commands" ] [ "Save" ] [ "Allows" ]     ) :
      if ( CNT > 1 ) and ( L [ 1 ] in self . JSON [ "Commands" ] [ "Settings" ] [ "Allows" ] ) :
        ######################################################################
        threading . Thread         ( target = self . StoreJSON   ) . start ( )
        ######################################################################
        return True
    ##########################################################################
    ## Insider命令儲列
    ##########################################################################
    if ( L [ 0 ] in self . JSON [ "Commands" ] [ "CommandQueues" ] [ "Allows" ] ) :
      if ( CNT > 1                                                         ) :
        ######################################################################
        if   ( L [ 1 ] in self . JSON [ "Commands" ] [ "TurnOn"  ] [ "Allows" ] ) :
          ####################################################################
          JSON = {}
          JSON [ "Action" ] = "On"
          self . SendRPC           ( self . tblHost , "Tasks" , JSON         )
          ####################################################################
          return True
        ######################################################################
        if ( L [ 1 ] in self . JSON [ "Commands" ] [ "TurnOff" ] [ "Allows" ] ) :
          ####################################################################
          JSON = {}
          JSON [ "Action" ] = "Off"
          self . SendRPC           ( self . tblHost , "Tasks" , JSON         )
          ####################################################################
          return True
        ######################################################################
        KS  = L [ 0 ]
        KS  = f"{KS} "
        CMD = message [ len(KS): ]
        if                         ( len ( CMD ) > 1                       ) :
          ####################################################################
          JSON = {}
          JSON [ "Action"  ] = "Queue"
          JSON [ "Command" ] = CMD
          JSON [ "Delay"   ] = 3.0
          self . SendRPC           ( self . tblHost , "Tasks" , JSON         )
          ####################################################################
          return True
    ##########################################################################
    return True
  ############################################################################
  ## 台灣大樂透
  ############################################################################
  def tblMode                      ( self , beau , message                 ) :
    ##########################################################################
    s    = message . lower         (                                         )
    s    = s       . rstrip        (                                         )
    L    = s       . split         ( ' '                                     )
    CNT  = len                     ( L                                       )
    beau = "Lottery"
    ##########################################################################
    ## 結束
    ##########################################################################
    if ( s in self . JSON [ "Commands" ] [ "Finish" ] [ "Allows" ]         ) :
      ########################################################################
      self . State = 0
      MSG          = self . JSON [ "Commands" ] [ "Finish" ] [ "Welcome" ]
      self . TalkTo                ( beau , MSG                              )
      ########################################################################
      return True
    ##########################################################################
    ## 期號
    ##########################################################################
    SERIALID = "Current-Serial"
    if ( s in self . JSON [ "Commands" ] [ SERIALID ] [ "Allows" ]         ) :
      ########################################################################
      JSON = {}
      JSON [ "Action" ] = "Serial"
      R    = self . GetJsonFromRPC  ( self . tblHost , "TBL" , JSON          )
      if                            ( not R                                ) :
        MSG = self . JSON [ "Commands" ] [ SERIALID ] [ "Failure" ]
        self . TalkTo               ( "Lottery" , MSG                        )
      else                                                                   :
        J  = R                      [ "JSON"                                 ]
        self . tblSerial = J        [ "Serial"                               ]
      ########################################################################
      return True
    ##########################################################################
    ## 指定期號 SerialNo
    ##########################################################################
    ASSIGNID = "Assign-Serial"
    if                              ( CNT > 1                              ) :
      if ( L [ 0 ] in self . JSON [ "Commands" ] [ ASSIGNID ] [ "Allows" ] ) :
        ######################################################################
        self . tblSerial = L [ 1 ]
        MSG  = self . JSON [ "Commands" ] [ ASSIGNID ] [ "Current" ]
        MSG  = MSG + self . tblSerial
        self . TalkTo               ( "Lottery" , MSG                        )
        ######################################################################
        return True
    ##########################################################################
    ##
    ##########################################################################
    if ( s in self . JSON [ "Commands" ] [ ASSIGNID ] [ "Allows" ]         ) :
      ########################################################################
      MSG  = self . JSON [ "Commands" ] [ ASSIGNID ] [ "Failure" ]
      self   . TalkTo               ( "Lottery" , MSG                        )
      ########################################################################
      return True
    ##########################################################################
    ## 預測
    ##########################################################################
    if ( s in self . JSON [ "Commands" ] [ "Prediction" ] [ "Allows" ]     ) :
      ########################################################################
      JSON = {}
      JSON [ "Action" ] = "Prediction"
      self . SendRPC                ( self . tblHost , "TBL" , JSON          )
      ########################################################################
      return True
    ##########################################################################
    ## 賺錢
    ##########################################################################
    if ( s in self . JSON [ "Commands" ] [ "Rewards" ] [ "Allows" ]        ) :
      ########################################################################
      JSON = {}
      JSON [ "Action" ] = "Rewards"
      self . SendRPC                ( self . tblHost , "TBL" , JSON          )
      ########################################################################
      return True
    ##########################################################################
    ## 取消投注
    ##########################################################################
    if ( s in self . JSON [ "Commands" ] [ "CancelBets" ] [ "Allows" ]     ) :
      ########################################################################
      JSON = {}
      JSON [ "Action" ] = "CancelBets"
      JSON [ "Serial" ] = self . tblSerial
      self . SendRPC                ( self . tblHost , "TBL" , JSON          )
      ########################################################################
      return True
    ##########################################################################
    ## 本期投注
    ##########################################################################
    if ( s in self . JSON [ "Commands" ] [ "CurrentBets" ] [ "Allows" ]    ) :
      ########################################################################
      JSON = {}
      JSON [ "Action" ] = "CurrentBets"
      self . SendRPC                ( self . tblHost , "TBL" , JSON          )
      ########################################################################
      return True
    ##########################################################################
    ## 列印投注
    ##########################################################################
    if ( s in self . JSON [ "Commands" ] [ "PrintBets" ] [ "Allows" ]      ) :
      ########################################################################
      JSON              = { }
      JSON [ "Action" ] = "PrintBets"
      JSON [ "X"      ] = self . tblPaperX
      JSON [ "Y"      ] = self . tblPaperY
      JSON [ "Gap"    ] = self . tblPaperGap
      JSON [ "W"      ] = self . tblPaperW
      JSON [ "H"      ] = self . tblPaperH
      JSON [ "L"      ] = self . tblPaperL
      JSON [ "Text"   ] = self . tblPaperText
      self . SendRPC                ( self . tblHost , "TBL" , JSON          )
      ########################################################################
      return True
    ##########################################################################
    ## 投注
    ##########################################################################
    if ( s in self . JSON [ "Commands" ] [ "Bettings" ] [ "Allows" ]       ) :
      ########################################################################
      self . State = 12
      if ( len ( L ) > 1 ) :
        self . tblSerial = L [ 1 ]
      ########################################################################
      return True
    ##########################################################################
    ## 紙張 X偏移植 Y偏移植 Gap每區間隔 Width每格間隔 Height高度間隔 Length填充長度 Text文字位置
    ##########################################################################
    if ( L [ 0 ] in self . JSON [ "Commands" ] [ "Paper" ] [ "Allows" ]    ) :
      if                            ( CNT == 8                             ) :
        ######################################################################
        self . tblPaperX    = float ( L [ 1 ]                                )
        self . tblPaperY    = float ( L [ 2 ]                                )
        self . tblPaperGap  = float ( L [ 3 ]                                )
        self . tblPaperW    = float ( L [ 4 ]                                )
        self . tblPaperH    = float ( L [ 5 ]                                )
        self . tblPaperL    = float ( L [ 6 ]                                )
        self . tblPaperText = float ( L [ 7 ]                                )
        ######################################################################
        self . JSON [ "Paper" ] [ "X"      ] = self . tblPaperX
        self . JSON [ "Paper" ] [ "Y"      ] = self . tblPaperY
        self . JSON [ "Paper" ] [ "Gap"    ] = self . tblPaperGap
        self . JSON [ "Paper" ] [ "Width"  ] = self . tblPaperW
        self . JSON [ "Paper" ] [ "Height" ] = self . tblPaperH
        self . JSON [ "Paper" ] [ "Length" ] = self . tblPaperL
        self . JSON [ "Paper" ] [ "Text"   ] = self . tblPaperText
        ######################################################################
        self . StoreJSON (                                                   )
        ######################################################################
        MSG  = "已經儲存紙張設定"
        self . TalkTo               ( "Lottery" , MSG                        )
        return True
        ######################################################################
      else                                                                   :
        ######################################################################
        CMD = self . JSON [ "Commands" ] [ "Paper" ] [ "Comment" ]
        X   = self . tblPaperX
        Y   = self . tblPaperY
        GAP = self . tblPaperGap
        W   = self . tblPaperW
        H   = self . tblPaperH
        L   = self . tblPaperL
        T   = self . tblPaperText
        MSG = f"{CMD}\n\nX偏移植：{X} mm\nY偏移植：{Y} mm\nGap每區間隔：{GAP} mm\nWidth每格間隔：{W} mm\nHeight高度間隔：{H} mm\nLength填充長度：{L} mm\nText文字高度：{T} mm"
        self   . TalkTo             ( "Lottery" , MSG                        )
        ######################################################################
        return True
    ##########################################################################
    return True
  ############################################################################
  ## 台灣大樂透投注
  ############################################################################
  def tblBettings                  ( self , beau , message                 ) :
    ##########################################################################
    self . State        = 11
    JSON                = { }
    JSON [ "Action"   ] = "Bettings"
    JSON [ "Serial"   ] = self . tblSerial
    JSON [ "Bettings" ] = message
    self . SendRPC                  ( self . tblHost , "TBL" , JSON          )
    ##########################################################################
    return True
  ############################################################################
  ## 啟動行事曆功能
  ############################################################################
  def StartCalendar       ( self                                           ) :
    ##########################################################################
    self . State = 21
    MSG  = self . JSON [ "Commands" ] [ "Calendars" ] [ "Welcome" ]
    self . TalkTo         ( self . Beau , MSG                                )
    self . BootupCalendar (                                                  )
    ##########################################################################
    return
  ############################################################################
  ## 行事曆模式
  ############################################################################
  def CalendarMode                 ( self , beau , message                 ) :
    ##########################################################################
    s    = message . lower         (                                         )
    s    = s       . rstrip        (                                         )
    L    = s       . split         ( ' '                                     )
    CNT  = len                     ( L                                       )
    beau = "Calendars"
    ##########################################################################
    ## 結束
    ##########################################################################
    if ( s in self . JSON [ "Commands" ] [ "Finish" ] [ "Allows" ]         ) :
      ########################################################################
      self . State = 0
      MSG          = self . JSON [ "Commands" ] [ "Finish" ] [ "Welcome" ]
      self . TalkTo                ( beau , MSG                              )
      ########################################################################
      return True
    ##########################################################################
    if                             ( self . Scheduler == None              ) :
      return False
    ##########################################################################
    ## 列出行事曆
    ##########################################################################
    if ( s in self . JSON [ "Commands" ] [ "CalendarList" ] [ "Allows" ]   ) :
      ########################################################################
      threading . Thread ( target = self . Scheduler . ReportCalendars ) . start ( )
      ########################################################################
      return True
    ##########################################################################
    ## 目前行事曆
    ##########################################################################
    if ( s in self . JSON [ "Commands" ] [ "CurrentCalendar" ] [ "Allows" ] ) :
      ########################################################################
      ##
      ##########################################################################
      threading . Thread ( target = self . Scheduler . ReportCurrentCalendar ) . start ( )
      ########################################################################
      return True
    ##########################################################################
    ## 目前時段列表
    ##########################################################################
    if ( s in self . JSON [ "Commands" ] [ "CurrentPeriods" ] [ "Allows" ] )  :
      ########################################################################
      ##
      ##########################################################################
      threading . Thread ( target = self . Scheduler . ReportCurrentPeriods ) . start ( )
      ########################################################################
      return True
    ##########################################################################
    if                             ( CNT < 2                               ) :
      return False
    ##########################################################################
    ## 選擇 編號
    ##########################################################################
    if ( L [ 0 ] in self . JSON [ "Commands" ] [ "PickCalendar" ] [ "Allows" ] ) :
      ########################################################################
      try                                                                    :
        ID = int ( L [ 1 ] )
        threading . Thread ( target = self . Scheduler . PickCalendar      , \
                             args   = ( ID , )                   ) . start ( )
        return True
      except                                                                 :
        return False
    ##########################################################################
    ## 載入
    ##########################################################################
    if ( L [ 0 ] in self . JSON [ "Commands" ] [ "Load" ] [ "Allows" ] )     :
      ########################################################################
      pass
    ##########################################################################
    ## 儲存
    ##########################################################################
    if ( L [ 0 ] in self . JSON [ "Commands" ] [ "Save" ] [ "Allows" ] )     :
      ########################################################################
      pass
    ##########################################################################
    if   ( L [ 0 ] in self . JSON [ "Commands" ] [ "Append" ] [ "Allows" ] ) :
      ########################################################################
      ## 新增 時段
      ##########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "Period" ] [ "Allows" ] ) :
        threading . Thread ( target = self . Scheduler . AppendCurrentPeriod ) . start ( )
        return True
      ########################################################################
      ## 新增 事件
      ##########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "Event" ] [ "Allows" ] ) :
        threading . Thread ( target = self . Scheduler . AppendCurrentEvent ) . start ( )
        return True
      ########################################################################
      ## 新增 任務
      ##########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "Task" ] [ "Allows" ] ) :
        threading . Thread ( target = self . Scheduler . AppendCurrentTask ) . start ( )
        return True
    ##########################################################################
    if   ( L [ 0 ] in self . JSON [ "Commands" ] [ "Assign" ] [ "Allows" ] ) :
      ########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "Relate" ] [ "Allows" ] ) :
        if ( CNT > 3 )                                                       :
          if   ( L [ 3 ] in self . JSON [ "Commands" ] [ "Period" ] [ "Allows" ] ) :
            ##################################################################
            ## 指定 關聯 任務 時段
            ##################################################################
            if ( L [ 2 ] in self . JSON [ "Commands" ] [ "Task"   ] [ "Allows" ] ) :
              threading . Thread ( target = self . Scheduler . RelateTaskAndPeriod ) . start ( )
              return True
            ##################################################################
            ## 指定 關聯 事件 時段
            ##################################################################
            if ( L [ 2 ] in self . JSON [ "Commands" ] [ "Event"  ] [ "Allows" ] ) :
              threading . Thread ( target = self . Scheduler . RelateEventAndPeriod ) . start ( )
              return True
          elif ( L [ 2 ] in self . JSON [ "Commands" ] [ "Task" ] [ "Allows" ] ) :
            ##################################################################
            ## 指定 關聯 任務 事件
            ##################################################################
            if ( L [ 3 ] in self . JSON [ "Commands" ] [ "Event"  ] [ "Allows" ] ) :
              threading . Thread ( target = self . Scheduler . RelateTaskAndEvent ) . start ( )
              return True
      ########################################################################
      ## 指定 時段 ( prd9......nnn or 35000000000.....nnn or nnn )
      ########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "Period" ] [ "Allows" ] ) :
        if ( CNT > 2 )                                                       :
          threading . Thread ( target = self . Scheduler . AssignCurrentPeriod , \
                               args   = ( L [ 2 ] , )            ) . start ( )
          return True
      ########################################################################
      ## 指定 事件 ( 730200.....nnn or nnn )
      ########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "Event" ] [ "Allows" ] ) :
        if ( CNT > 2 )                                                       :
          threading . Thread ( target = self . Scheduler . AssignCurrentEvent , \
                               args   = ( L [ 2 ] , )            ) . start ( )
          return True
      ########################################################################
      ## 指定 任務 ( 730300.....nnn or nnn )
      ########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "Task" ] [ "Allows" ] ) :
        if ( CNT > 2 )                                                       :
          threading . Thread ( target = self . Scheduler . AssignCurrentTask , \
                               args   = ( L [ 2 ] , )            ) . start ( )
          return True
      ########################################################################
      ## 指定 開始時間 2021/05/10 22:12:34
      ########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "StartTime" ] [ "Allows" ] ) :
        if ( CNT > 2 )                                                       :
          TT = L [ 2 ]
          if ( CNT > 3 ) :
            TT = TT + " " + L [ 3 ]
          threading . Thread ( target = self . Scheduler . AssignStartTime , \
                               args   = ( TT , )                 ) . start ( )
          return True
      ########################################################################
      ## 指定 結束時間 2021/05/10 23:21:43
      ########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "EndTime" ] [ "Allows" ] ) :
        if ( CNT > 2 )                                                       :
          TT = L [ 2 ]
          if ( CNT > 3 ) :
            TT = TT + " " + L [ 3 ]
          threading . Thread ( target = self . Scheduler . AssignEndTime ,   \
                               args   = ( TT , )                 ) . start ( )
          return True
      ########################################################################
      ## 指定 標題
      ########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "Title" ] [ "Allows" ] ) :
        self . State = 22
        return True
      ########################################################################
      ## 指定 描述
      ########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "Description" ] [ "Allows" ] ) :
        self . State = 23
        return True
    ##########################################################################
    if   ( L [ 0 ] in self . JSON [ "Commands" ] [ "SyncSystem" ] [ "Allows" ] ) :
      ########################################################################
      ## 同步 時段列表
      ########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "Periods"    ] [ "Allows" ] ) :
        threading . Thread ( target = self . Scheduler . SyncPeriods ) . start ( )
        return True
    ##########################################################################
    if ( L [ 0 ] in self . JSON [ "Commands" ] [ "TurnOn"  ] [ "Allows" ] )  :
      ########################################################################
      ## 打開
      ########################################################################
      pass
    ##########################################################################
    if ( L [ 0 ] in self . JSON [ "Commands" ] [ "TurnOff" ] [ "Allows" ] )  :
      ########################################################################
      ## 關閉
      ########################################################################
      pass
    ##########################################################################
    if   ( L [ 0 ] in self . JSON [ "Commands" ] [ "Current" ] [ "Allows" ] ) :
      ########################################################################
      ## 目前 時段
      ########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "Period"  ] [ "Allows" ] ) :
        threading . Thread ( target = self . Scheduler . ReportCurrentPeriod ) . start ( )
        return True
      ########################################################################
      ## 目前 時段列表
      ########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "Periods" ] [ "Allows" ] ) :
        threading . Thread ( target = self . Scheduler . ReportCurrentPeriods ) . start ( )
        return True
      ########################################################################
      ## 目前 設定
      ########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "Settings"  ] [ "Allows" ] ) :
        threading . Thread ( target = self . Scheduler . ReportCurrentSettings ) . start ( )
        return True
    ##########################################################################
    if   ( L [ 0 ] in self . JSON [ "Commands" ] [ "Modify" ] [ "Allows" ] ) :
      ########################################################################
      ## 修改 時段
      ########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "Period"  ] [ "Allows" ] ) :
        threading . Thread ( target = self . Scheduler . ModifyCurrentPeriod ) . start ( )
        return True
      ########################################################################
      ## 修改 事件
      ########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "Event"  ] [ "Allows" ] ) :
        threading . Thread ( target = self . Scheduler . ModifyCurrentEvent ) . start ( )
        return True
      ########################################################################
      ## 修改 任務
      ########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "Task"  ] [ "Allows" ] ) :
        threading . Thread ( target = self . Scheduler . ModifyCurrentTask ) . start ( )
        return True
    ##########################################################################
    if   ( L [ 0 ] in self . JSON [ "Commands" ] [ "Inventory" ] [ "Allows" ] ) :
      ########################################################################
      ## 清單 時段
      ########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "Period"  ] [ "Allows" ] ) :
        threading . Thread ( target = self . Scheduler . InventoryCurrentPeriods ) . start ( )
        return True
      ########################################################################
      ## 清單 事件
      ########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "Events"  ] [ "Allows" ] ) :
        threading . Thread ( target = self . Scheduler . InventoryCurrentEvents ) . start ( )
        return True
      ########################################################################
      ## 清單 任務
      ########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "Tasks"  ] [ "Allows" ] ) :
        threading . Thread ( target = self . Scheduler . InventoryCurrentTasks ) . start ( )
        return True
    ##########################################################################
    if   ( L [ 0 ] in self . JSON [ "Commands" ] [ "Clear" ] [ "Allows" ] ) :
      ########################################################################
      ## 清除 設定
      ########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "Settings" ] [ "Allows" ] ) :
        threading . Thread ( target = self . Scheduler . ClearCurrentSettings ) . start ( )
        return True
    ##########################################################################
    if   ( L [ 0 ] in self . JSON [ "Commands" ] [ "Decouple" ] [ "Allows" ] ) :
      ########################################################################
      pass
    ##########################################################################
    if   ( L [ 0 ] in self . JSON [ "Commands" ] [ "Details" ] [ "Allows" ] ) :
      ########################################################################
      if ( L [ 1 ] in self . JSON [ "Commands" ] [ "Google" ] [ "Allows" ] ) :
        if ( CNT > 2 ) :
          ####################################################################
          ## 詳細 谷歌 時段
          ####################################################################
          if ( L [ 2 ] in self . JSON [ "Commands" ] [ "Period" ] [ "Allows" ] ) :
            threading . Thread ( target = self . Scheduler . ReportCurrentGooglePeriod ) . start ( )
            return True
    ##########################################################################
    return True
  ############################################################################
  ## 行事曆:標題
  ############################################################################
  def CalendarTitle                ( self , beau , message                 ) :
    ##########################################################################
    self . State        = 21
    self . Scheduler . CurrentTitle = message
    ##########################################################################
    self . debug                   ( f"assign title {message}"               )
    ##########################################################################
    return True
  ############################################################################
  ## 行事曆:描述
  ############################################################################
  def CalendarDescription          ( self , beau , message                 ) :
    ##########################################################################
    self . State        = 21
    self . Scheduler . CurrentDescription = message
    ##########################################################################
    self . debug                   ( f"assign description {message}"         )
    ##########################################################################
    return True
  ############################################################################
  ## 取得目錄
  ############################################################################
  def OsGetCWD                      ( self                                 ) :
    ##########################################################################
    self . CurrentDir = os . getcwd (                                        )
    self . TalkTo                   ( self . Beau , self . CurrentDir        )
    ##########################################################################
    directory         = self . CurrentDir
    self . debug                    ( f"pwd {directory}"                   )
    ##########################################################################
    return
  ############################################################################
  ## 切換目錄
  ############################################################################
  def OsChdir                       ( self , directory                     ) :
    ##########################################################################
    os   . chdir                    (        directory                       )
    self . OsGetCWD                 (                                        )
    ##########################################################################
    self . debug                    ( f"chdir {directory}"                   )
    ##########################################################################
    return
  ############################################################################
  ## 列出檔案
  ############################################################################
  def ListFiles                     ( self                                 ) :
    ##########################################################################
    L     = "\n" . join ( [ f for f in os . listdir ( ) ] )
    T     = L
    self . TalkTo                   ( "files" , T                            )
    ##########################################################################
    self . debug                    ( "List local files"                     )
    ##########################################################################
    return
  ############################################################################
  ## 取得RPC命令的回應
  ############################################################################
  def GetJsonFromRPC           ( self , HOST , Command , JSON              ) :
    ##########################################################################
    CMD      = f"{HOST}/{Command}"
    Headers  = { "Username" : "foxman"                                       ,
                 "Password" : "actionsfox2019"                               }
    try                                                                      :
      status = requests . post ( CMD                                         ,
                                 data    = json . dumps ( JSON )             ,
                                 headers = Headers                           )
    except                                                                   :
      return False
    ##########################################################################
    KK       = status . text
    KK       = KK . replace    ( "'" , "\""                                  )
    ##########################################################################
    return { "Status" : status . status_code                                 ,
             "JSON"   : json . loads ( KK )                                  }
  ############################################################################
  ## 發送RPC命令
  ############################################################################
  def SendRPC                       ( self , HOST , Command , JSON         ) :
    ##########################################################################
    CMD      = f"{HOST}/{Command}"
    Headers  = { "Username" : "foxman"                                       ,
                 "Password" : "actionsfox2019"                               }
    try                                                                      :
      status = requests . post ( CMD                                         ,
                                 data    = json . dumps ( JSON )             ,
                                 headers = Headers                           )
    except                                                                   :
      return False
    ##########################################################################
    return status . status_code
  ############################################################################
  ## 下載軟體版本
  ############################################################################
  def PullSystem                    ( self                                 ) :
    return self . RunCommand        ( self . PullCommand                     )
  ############################################################################
  ## 推送軟體版本
  ############################################################################
  def PushSystem                    ( self                                 ) :
    ##########################################################################
    return self . RunCommand        ( self . PushCommand                     )
  ############################################################################
  ## 同步軟體版本
  ############################################################################
  def SyncSystem                    ( self                                 ) :
    ##########################################################################
    self . RunCommand               ( self . PushCommand                     )
    self . RunCommand               ( self . PullCommand                     )
    ##########################################################################
    return
  ############################################################################
  ## 執行命令
  ############################################################################
  def RunCommand                       ( self , command                    ) :
    ##########################################################################
    if                                 ( len ( command ) <= 0              ) :
      return
    ##########################################################################
    r = subprocess . Popen             ( command                           , \
                                        shell  = True                      , \
                                        stdout = subprocess . PIPE         , \
                                        stderr = subprocess . STDOUT         )
    L = r . stdout . readlines         (                                     )
    r . stdout . close                 (                                     )
    ##########################################################################
    X     = [ ]
    for S in L                                                               :
      X   . append                     ( S . decode ( "utf-8" )              )
    T     = "" . join                  ( X                                   )
    ##########################################################################
    self  . TalkTo                     ( "command" , T                       )
    ##########################################################################
    return
##############################################################################
