# -*- coding: utf-8 -*-
##############################################################################
## Foxman代理人
##############################################################################
import os
import sys
import getopt
import time
import datetime
import logging
import requests
import threading
import gettext
import shutil
import json
##############################################################################
## Foxman智能回應程式
##############################################################################
class FoxmanRobot (                                                        ) :
  ############################################################################
  def __init__   ( self                                                    ) :
    self . DebugLogger = None
    self . Talk        = None
    self . Reboot      = None
    self . State       = 0
    self . CurrentDir  = ""
    return
  ############################################################################
  def __del__    ( self                                                    ) :
    return
  ############################################################################
  def debug                        ( self , message , way = "info"         ) :
    ##########################################################################
    Logger   = self . DebugLogger
    ##########################################################################
    if                             ( Logger == None                        ) :
      return
    ##########################################################################
    if                             ( way == "debug"                        ) :
      Logger . debug               ( message                                 )
    elif                           ( way == "info"                         ) :
      Logger . info                ( message                                 )
    ##########################################################################
    return
  ############################################################################
  def ActualTalkTo                 ( self , beau , message                 ) :
    ##########################################################################
    if                             ( self . Talk == None                   ) :
      return False
    ##########################################################################
    time . sleep                   ( 1.0                                     )
    self . Talk                    ( beau , message                          )
    ##########################################################################
    return True
  ############################################################################
  def TalkTo                       ( self , beau , message                 ) :
    threading . Thread             ( target = self . ActualTalkTo          , \
                                     args = ( beau , message , ) ) . start ( )
    return True
  ############################################################################
  def Reply                        ( self , beau , message                 ) :
    ##########################################################################
    if                             ( self . State == 0                     ) :
      self . IdleState             (        beau , message                   )
    ##########################################################################
    elif                           ( self . State == 1                     ) :
      self . BasicMode             (        beau , message                   )
    ##########################################################################
    return True
  ############################################################################
  def IdleState                    ( self , beau , message                 ) :
    ##########################################################################
    s    = message . lower         (                                         )
    s    = s       . rstrip        (                                         )
    beau = "Idle"
    ##########################################################################
    if                             ( s == "interactive"                    ) :
      self . State = 1
      MSG          = "I am here to serve you, Sir!"
      self . TalkTo                ( beau , MSG                              )
    ##########################################################################
    return True
  ############################################################################
  def BasicMode                    ( self , beau , message                 ) :
    ##########################################################################
    s    = message . lower         (                                         )
    s    = s       . rstrip        (                                         )
    L    = s       . split         ( ' '                                     )
    CNT  = len                     ( L                                       )
    beau = "Basic"
    ##########################################################################
    if                             ( s == "reboot"                         ) :
      self . Reboot                (                                         )
      return True
    ##########################################################################
    if                             ( s == "finish"                         ) :
      self . State = 0
      MSG          = "I will be waiting for you"
      self . TalkTo                ( beau , MSG                              )
      return True
    ##########################################################################
    if                             ( CNT <= 0                              ) :
      return True
    ##########################################################################
    if                             ( L [ 0 ] == "current"                  ) :
      ########################################################################
      if                           ( CNT > 1                               ) :
        ######################################################################
        if                         ( L [ 1 ] == "directory"                ) :
          self . TalkTo            ( beau , self . CurrentDir                )
    elif                           ( L [ 0 ] == "cwd"                      ) :
      self     . TalkTo            ( beau , self . CurrentDir                )
    ##########################################################################
    return True
##############################################################################
