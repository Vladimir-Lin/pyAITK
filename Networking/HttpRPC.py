# -*- coding: utf-8 -*-
##############################################################################
## HTTP RPC命令接收通道
##############################################################################
import os
import sys
import getopt
import time
import datetime
import logging
import requests
import threading
import gettext
import shutil
import json
import ssl
import asyncio
##############################################################################
import urllib
import urllib . parse
from   urllib          import parse
##############################################################################
from   pathlib         import Path
##############################################################################
from   http   . server import HTTPServer
from   http   . server import BaseHTTPRequestHandler
from   http   . server import ThreadingHTTPServer
##############################################################################
## HTTP RPC命令接收通道
##############################################################################
class HttpRPC                   ( BaseHTTPRequestHandler                   ) :
  ############################################################################
  ## 發送回應
  ############################################################################
  def SendResponse              ( self , Answer , Response                 ) :
    ##########################################################################
    ## Send the html header
    ##########################################################################
    self . send_response        ( Answer                                     )
    self . send_header          ( 'Content-type' , 'application/json'        )
    self . end_headers          (                                            )
    ##########################################################################
    ## Send the html message
    ##########################################################################
    self . wfile . write ( bytes ( str ( Response ) , encoding = "utf8" )    )
    ##########################################################################
    return
  ############################################################################
  ## Silence output message
  ############################################################################
  def log_message               ( self , format , *args                    ) :
    return
  ############################################################################
  ## Handler for the GET requests
  ############################################################################
  def do_GET                    ( self                                     ) :
    return self . Handling      ( False                                      )
  ############################################################################
  ## Handler for the POST requests
  ############################################################################
  def do_POST                   ( self                                     ) :
    return self . Handling      ( True                                       )
  ############################################################################
  ## 處理命令輸入
  ############################################################################
  def Handling                  ( self , posting                           ) :
    ##########################################################################
    self . Attache              (                                            )
    ##########################################################################
    if                          ( self . Robot == None                     ) :
      self . SendResponse       ( 401 , { }                                  )
      return
    ##########################################################################
    uri      = parse . urlparse ( self . path                                )
    JSON     = { }
    Response = { }
    Answer   = 200
    ##########################################################################
    if                          ( posting                                  ) :
      contentLength = int       ( self . headers [ 'Content-Length' ]        )
      if                        ( contentLength > 0                        ) :
        ######################################################################
        try                                                                  :
          body = self . rfile . read ( contentLength                         )
          body = body . decode  ( "utf-8"                                    )
          JSON = json . loads   ( body                                       )
        except ValueError                                                    :
          Answer = 400
        ######################################################################
    else                                                                     :
      par    = parse . parse_qs ( uri . query                                )
      if                        ( len ( par ) > 0                          ) :
        pKeys = par . keys      (                                            )
        for k in pKeys                                                       :
          JSON [ k ] = par [ k ] [ 0 ]
    ##########################################################################
    ## Check Account
    ##########################################################################
    if                          ( not self . isAuthorized ( )              ) :
      Answer = 401
    ##########################################################################
    if                          ( Answer == 200                            ) :
      ########################################################################
      Dispatched = self . Dispatch ( uri . path , self . headers , JSON      )
      ########################################################################
      Response   = Dispatched [ "Response" ]
      Answer     = Dispatched [ "Answer"   ]
    ##########################################################################
    self . SendResponse         ( Answer , Response                          )
    ##########################################################################
    return
  ############################################################################
  ## 檢查帳號密碼
  ############################################################################
  def isAuthorized              ( self                                     ) :
    raise NotImplementedError   (                                            )
  ############################################################################
  ## 掛入額外資訊
  ############################################################################
  def Attache                   ( self                                     ) :
    raise NotImplementedError   (                                            )
  ############################################################################
  def Dispatch                  ( self , Path , Headers , JSON             ) :
    raise NotImplementedError   (                                            )
##############################################################################
