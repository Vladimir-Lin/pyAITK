# -*- coding: utf-8 -*-
##############################################################################
## Telegram機器人
##############################################################################
import os
import sys
import getopt
import time
import datetime
import logging
import requests
import threading
import gettext
import shutil
import json
import ssl
import asyncio
##############################################################################
import urllib
import urllib   . parse
from   urllib                              import parse
##############################################################################
from   pathlib                             import Path
##############################################################################
from   http     . server                   import HTTPServer
from   http     . server                   import BaseHTTPRequestHandler
from   http     . server                   import ThreadingHTTPServer
##############################################################################
from   telegram . ext                      import Updater
##############################################################################
from   . HttpRPC                           import HttpRPC as HttpRPC
##############################################################################
class TelegramWatcher           ( HttpRPC                                  ) :
  ############################################################################
  ## 檢查帳號密碼
  ############################################################################
  def isAuthorized              ( self                                     ) :
    ##########################################################################
    ##########################################################################
    return True
  ############################################################################
  ## 掛入額外資訊
  ############################################################################
  def Attache                   ( self                                     ) :
    ##########################################################################
    ##########################################################################
    return True
  ############################################################################
  def Dispatch                  ( self , Path , Headers , JSON             ) :
    ##########################################################################
    ##########################################################################
    return                      { "Answer"     : 202                         ,
                                    "Response" :                             {
                                    "Answer"   : "Yes"                     } }
##############################################################################
class TelegramRobot (                                                      ) :
  ############################################################################
  def __init__   ( self                                                      ,
                   Username = ""                                             ,
                   Password = ""                                             ,
                   Account  = ""                                             ,
                   Options  = { }                                          ) :
    ##########################################################################
    self . TelegramLocker = threading . Lock (                               )
    self . Watcher        = None
    self . DebugLogger    = None
    self . Running        = False
    self . Account        = Account
    self . Username       = Username
    self . Password       = Password
    self . HttpPlugin     = None
    self . SetOptions ( Options )
    ##########################################################################
    return
  ############################################################################
  def __del__       ( self                                                 ) :
    return
  ############################################################################
  def SetOptions ( self , Options                                          ) :
    self . Options = Options
    return
  ############################################################################
  def debug                        ( self , message , way = "info"         ) :
    ##########################################################################
    Logger   = self . DebugLogger
    ##########################################################################
    if                             ( Logger == None                        ) :
      return
    ##########################################################################
    if                             ( way == "debug"                        ) :
      Logger . debug               ( message                                 )
    elif                           ( way == "info"                         ) :
      Logger . info                ( message                                 )
    ##########################################################################
    return
  ############################################################################
  def lock                          ( self                                 ) :
    self . TelegramLocker . acquire (                                        )
    return
  ############################################################################
  def release                       ( self                                 ) :
    self . TelegramLocker . release (                                        )
    return
  ############################################################################
  def isWorking         ( self                                             ) :
    return self . Working
##############################################################################
