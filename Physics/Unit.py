# -*- coding: utf-8 -*-
##############################################################################
## 單位處理元件
##############################################################################
from   enum  import IntEnum
##############################################################################
import gmpy2
from   gmpy2 import mpz
from   gmpy2 import mpq
from   gmpy2 import mpfr
##############################################################################
class Unit       (                                                         ) :
  ############################################################################
  def __init__   ( self , isFloat = False                                  ) :
    ##########################################################################
    self . Clear (        isFloat                                            )
    ##########################################################################
    return
  ############################################################################
  def __del__  ( self                                                      ) :
    ##########################################################################
    ##########################################################################
    return
  ############################################################################
  def Clear            ( self , isFloat                                    ) :
    ##########################################################################
    self . isFloat   = isFloat
    self . Elements  = [                                                     ]
    self . Exponents = {                                                     }
    self . NAMEs     = {                                                     }
    ##########################################################################
    return
  ############################################################################
  def Assign ( self , OBJ                                                  ) :
    ##########################################################################
    self . isFloat   = OBJ . isFloat
    self . Elements  = OBJ . Elements
    self . Exponents = OBJ . Exponents
    self . NAMEs     = OBJ . NAMEs
    ##########################################################################
    return
  ############################################################################
  def setName ( self , UUID , NAME                                         ) :
    ##########################################################################
    self . NAMEs [ UUID ] = NAME
    ##########################################################################
    return
  ############################################################################
  def Combine       ( self , OBJ                                           ) :
    ##########################################################################
    for UUID in OBJ . Elements                                               :
      ########################################################################
      self . Append ( UUID , OBJ . Exponents [ UUID ]                        )
    ##########################################################################
    return
  ############################################################################
  def Divide        ( self , OBJ                                           ) :
    ##########################################################################
    for UUID in OBJ . Elements                                               :
      ########################################################################
      self . Append ( UUID , - OBJ . Exponents [ UUID ]                      )
    ##########################################################################
    return
  ############################################################################
  def toInt ( self                                                         ) :
    ##########################################################################
    self . isFloat = False
    ##########################################################################
    for UUID in self . Elements                                              :
      ########################################################################
      self . Exponents [ UUID ] = int ( self . Exponents [ UUID ]            )
    ##########################################################################
    return
  ############################################################################
  def toFloat ( self                                                       ) :
    ##########################################################################
    self . isFloat = True
    ##########################################################################
    for UUID in self . Elements                                              :
      ########################################################################
      self . Exponents [ UUID ] = float ( self . Exponents [ UUID ]          )
    ##########################################################################
    return
  ############################################################################
  def Reverse ( self                                                       ) :
    ##########################################################################
    for UUID in self . Elements                                              :
      ########################################################################
      self . Exponents [ UUID ] = - self . Exponents [ UUID                  ]
    ##########################################################################
    return
  ############################################################################
  def Append     ( self , UUID , Exponent = 1                              ) :
    ##########################################################################
    if           ( UUID not in self . Elements                             ) :
      ########################################################################
      self . Elements . append ( UUID                                        )
    ##########################################################################
    if           ( UUID     in self . Exponents                            ) :
      ########################################################################
      self . Exponents [ UUID ] = self . Exponents [ UUID ] + Exponent
      ########################################################################
    else                                                                     :
      ########################################################################
      self . Exponents [ UUID ] = Exponent
    ##########################################################################
    self . Purge (                                                           )
    ##########################################################################
    return
  ############################################################################
  def Purge                    ( self                                      ) :
    ##########################################################################
    if                         ( self . isFloat                            ) :
      return
    ##########################################################################
    EMPTYs =                   [                                             ]
    ##########################################################################
    for UUID in self . Elements                                              :
      ########################################################################
      V = self . Exponents     [ UUID                                        ]
      ########################################################################
      if                       ( 0 == V                                    ) :
        ######################################################################
        EMPTYs . append        ( UUID                                        )
    ##########################################################################
    for UUID in EMPTYs                                                       :
      ########################################################################
      self . Elements . remove ( UUID                                        )
      del self . Exponents     [ UUID                                        ]
    ##########################################################################
    return
  ############################################################################
  def UpperListings          ( self                                        ) :
    ##########################################################################
    ITEMs =                  [                                               ]
    ##########################################################################
    for UUID in self . Elements                                              :
      ########################################################################
      V   = self . Exponents [ UUID                                          ]
      ########################################################################
      if                     ( V > 0                                       ) :
        ######################################################################
        ITEMs . append       ( UUID                                          )
    ##########################################################################
    return ITEMs
  ############################################################################
  def LowerListings          ( self                                        ) :
    ##########################################################################
    ITEMs =                  [                                               ]
    ##########################################################################
    for UUID in self . Elements                                              :
      ########################################################################
      V = self . Exponents   [ UUID                                          ]
      ########################################################################
      if                     ( V < 0                                       ) :
        ######################################################################
        ITEMs . append       ( UUID                                          )
    ##########################################################################
    return ITEMs
  ############################################################################
  def Exponent              ( self , UUID                                  ) :
    return self . Exponents [        UUID                                    ]
##############################################################################
