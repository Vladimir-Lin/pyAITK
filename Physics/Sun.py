# -*- coding: utf-8 -*-
##############################################################################
## 太陽
##############################################################################
import math
##############################################################################
import gmpy2
from   gmpy2 import mpz
from   gmpy2 import mpq
from   gmpy2 import mpfr
##############################################################################
RequatorialRadius = mpfr ( "695700000.0"                         , 1024      )
RmaxRadius        = mpfr ( "696342000.0"                         , 1024      )
##############################################################################
class Sun                      (                                           ) :
  ############################################################################
  def __init__                 ( self                                      ) :
    ##########################################################################
    ##########################################################################
    return
  ############################################################################
  def __del__                  ( self                                      ) :
    ##########################################################################
    ##########################################################################
    return
  ############################################################################
  ## 角直徑
  ## Distance : 距離
  ## Radius   : 太陽半徑
  ############################################################################
  def AngularDiameter      ( self , Distance , Radius = RequatorialRadius  ) :
    ##########################################################################
    A = gmpy2 . atan       ( Radius / Distance                               )
    ##########################################################################
    return gmpy2 . degrees ( A + A                                           )
  ############################################################################
  ## 星體與太陽的距離
  ## e           : 離心率
  ## SemiAxis    : 半長軸
  ## TrueAnomaly : 真近點角
  ############################################################################
  def Distance        ( self , e , SemiAxis , TrueAnomaly                  ) :
    ##########################################################################
    ## CA = gmpy2 . cos  ( gmpy2 . degrees ( TrueAnomaly )                      )
    CA = gmpy2 . cos  ( gmpy2 . radians ( TrueAnomaly )                      )
    ##########################################################################
    return SemiAxis * ( ( 1 - ( e * e ) ) / ( 1 + ( e * CA ) )               )
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
  ############################################################################
##############################################################################
