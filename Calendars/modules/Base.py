# -*- coding: utf-8 -*-
##############################################################################
## 曆法基底元件
##############################################################################
import time
import datetime
import pytz
##############################################################################
class Base                       (                                         ) :
  ############################################################################
  def __init__                   ( self                                    ) :
    ##########################################################################
    self . DefaultCalendarValues (                                           )
    ##########################################################################
    return
  ############################################################################
  def __del__      ( self                                                  ) :
    ##########################################################################
    ##########################################################################
    return
  ############################################################################
  def __int__ ( self                                                       ) :
    return self . Stardate
  ############################################################################
  def __add__  ( self , other                                              ) :
    ##########################################################################
    V    = 0
    ##########################################################################
    try                                                                      :
      V  = int (        other                                                )
    except                                                                   :
      pass
    ##########################################################################
    return int ( self . Stardate + V                                         )
  ############################################################################
  def __sub__  ( self , other                                              ) :
    ##########################################################################
    V    = 0
    ##########################################################################
    try                                                                      :
      V  = int (        other                                                )
    except                                                                   :
      pass
    ##########################################################################
    return int ( self . Stardate - V                                         )
  ############################################################################
  def __iadd__          ( self , other                                     ) :
    ##########################################################################
    V    = 0
    ##########################################################################
    try                                                                      :
      V  = int          ( other                                              )
    except                                                                   :
      pass
    ##########################################################################
    self . Stardate += V
    self . valueChanged (                                                    )
    ##########################################################################
    return self
  ############################################################################
  def __isub__          ( self , other                                     ) :
    ##########################################################################
    V    = 0
    ##########################################################################
    try                                                                      :
      V  = int          (        other                                       )
    except                                                                   :
      pass
    ##########################################################################
    self . Stardate -= V
    self . valueChanged (                                                    )
    ##########################################################################
    return self
  ############################################################################
  def __str__                 ( self                                       ) :
    raise NotImplementedError (                                              )
  ############################################################################
  def __repr__                ( self                                       ) :
    raise NotImplementedError (                                              )
  ############################################################################
  def typeStrings             ( self                                       ) :
    raise NotImplementedError (                                              )
  ############################################################################
  def DefaultCalendarValues ( self                                         ) :
    ##########################################################################
    self . Stardate         = 0
    self . TzShift          = 0
    self . TimeZone         = ""
    self . Format           = ""
    self . Signature        = ""
    self . defaultFormatter = None
    self . defaultParser    = None
    ##########################################################################
    return
  ############################################################################
  def isValid ( self                                                       ) :
    return    ( self . Stardate > 0                                          )
  ############################################################################
  def hasLeapYear ( self                                                   ) :
    return False
  ############################################################################
  def isLeapYear  ( self                                                   ) :
    return False
  ############################################################################
  def hasTimeZone ( self                                                   ) :
    return True
  ############################################################################
  def GetTimeZoneOffset                       ( self                       ) :
    ##########################################################################
    self          . TzShift = 0
    TZS           = self . TimeZone
    ##########################################################################
    if                                        ( len ( TZS ) <= 0           ) :
      return self . TzShift
    ##########################################################################
    try                                                                      :
      TZV         = pytz . timezone           ( TZS                          )
    except                                                                   :
      return self . TzShift
    ##########################################################################
    try                                                                      :
      NOW         = datetime . datetime . now (                              )
    except                                                                   :
      return self . TzShift
    ##########################################################################
    try                                                                      :
      Offset      = TZV . utcoffset           ( NOW                          )
    except                                                                   :
      return self . TzShift
    ##########################################################################
    try                                                                      :
      SHIFT       = Offset . total_seconds    (                              )
    except                                                                   :
      return self . TzShift
    ##########################################################################
    try                                                                      :
      self        . TzShift = int             ( SHIFT                        )
    except                                                                   :
      return self . TzShift
    ##########################################################################
    return   self . TzShift
  ############################################################################
  def TzOffset ( self                                                      ) :
    return self . TzShift
  ############################################################################
  def setStarDate       ( self , SD                                        ) :
    ##########################################################################
    try                                                                      :
      CDT = int         (        SD                                          )
    except                                                                   :
      return self . Stardate
    ##########################################################################
    self . Stardate = CDT
    self . valueChanged (                                                    )
    ##########################################################################
    return self . Stardate
  ############################################################################
  def UnixTimestamp ( self                                                 ) :
    return int      ( self . Stardate - 1420092377704080000                  )
  ############################################################################
  def setUnixTimestamp    ( self , unixTimestamp                           ) :
    ##########################################################################
    try                                                                      :
      ut = int            (        unixTimestamp                             )
    except                                                                   :
      return self . Stardate
    ##########################################################################
    self . Stardate = int ( ut + 1420092377704080000                         )
    self . valueChanged   (                                                  )
    ##########################################################################
    return self . Stardate
  ############################################################################
  def fromUnixDateTime             ( self , dt                             ) :
    return self . setUnixTimestamp ( int ( dt . timestamp ( ) )              )
  ############################################################################
  def Now                          ( self                                  ) :
    return self . fromUnixDateTime ( datetime . datetime . now ( )           )
  ############################################################################
  def setTimeZone            ( self , TZ                                   ) :
    ##########################################################################
    TZS   = TZ
    ##########################################################################
    try                                                                      :
      TZS = TZS . decode     ( "utf-8"                                       )
    except                                                                   :
      pass
    ##########################################################################
    self . TimeZone = f"{TZS}"
    self . GetTimeZoneOffset (                                               )
    ##########################################################################
    return self . TimeZone
  ############################################################################
  def getTimeZone ( self                                                   ) :
    return self . TimeZone
  ############################################################################
  def setSignature       ( self , signature                                ) :
    ##########################################################################
    FTS   = signature
    ##########################################################################
    try                                                                      :
      FTS = FTS . decode ( "utf-8"                                           )
    except                                                                   :
      pass
    ##########################################################################
    self . Signature = f"{FTS}"
    ##########################################################################
    return self . Signature
  ############################################################################
  def getSignature ( self                                                  ) :
    return self . Signature
  ############################################################################
  def setFormat          ( self , formatString                             ) :
    ##########################################################################
    FTS   = formatString
    ##########################################################################
    try                                                                      :
      FTS = FTS . decode ( "utf-8"                                           )
    except                                                                   :
      pass
    ##########################################################################
    self . Format = f"{FTS}"
    ##########################################################################
    return self . Format
  ############################################################################
  def getFormat ( self                                                     ) :
    return self . Format
  ############################################################################
  def InstallFormatter ( self , formatter                                  ) :
    ##########################################################################
    self . defaultFormatter = formatter
    ##########################################################################
    return self . defaultFormatter
  ############################################################################
  def InstallParser    ( self , parser                                     ) :
    ##########################################################################
    self . defaultParser = parser
    ##########################################################################
    return self . defaultParser
  ############################################################################
  def valueChanged            ( self                                       ) :
    raise NotImplementedError (                                              )
  ############################################################################
  def toJson                  ( self                                       ) :
    raise NotImplementedError (                                              )
  ############################################################################
  def toString                ( self , format = ""                         ) :
    raise NotImplementedError (                                              )
  ############################################################################
  def fromString              ( self , inputString , format = ""           ) :
    raise NotImplementedError (                                              )
  ############################################################################
  def setValue                ( self , key , value                         ) :
    raise NotImplementedError (                                              )
  ############################################################################
  def getValue                ( self , key                                 ) :
    raise NotImplementedError (                                              )
##############################################################################
