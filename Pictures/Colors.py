# -*- coding: utf-8 -*-
##############################################################################
## 顏色
##############################################################################
import os
import sys
import time
import datetime
import logging
import requests
import threading
import colour
##############################################################################
def ConstraintRGB             ( V                                          ) :
  ############################################################################
  if                          ( V < 0                                      ) :
    return 0
  ############################################################################
  if                          ( V > 255                                    ) :
    return 255
  ############################################################################
  return int                  ( V                                            )
##############################################################################
def WaveLengthToRGB                ( Lambda                                ) :
  ############################################################################
  XYZ = colour . wavelength_to_XYZ ( Lambda                                  )
  RGB = colour . XYZ_to_sRGB       ( XYZ                                     )
  R   = RGB                        [ 0                                       ]
  G   = RGB                        [ 1                                       ]
  B   = RGB                        [ 2                                       ]
  ############################################################################
  R   = R * 255
  G   = G * 255
  B   = B * 255
  ############################################################################
  return ConstraintRGB ( R ) , ConstraintRGB ( G ) , ConstraintRGB ( B )
##############################################################################
def RatioToWaveLength ( x , maxV , minWL = 380 , maxWL = 780               ) :
  ############################################################################
  dn     = maxWL - minWL
  ############################################################################
  return ( float ( x ) * dn / float( maxV - 1 ) ) + minWL
##############################################################################
