# -*- coding: utf-8 -*-
##############################################################################
## RGBAi
## RGBA顏色模型 0~255整數值域
##############################################################################
import cv2
import numpy as np
import colour
from . CommonColor import CommonColor
##############################################################################
class RGBi                  ( CommonColor                                  ) :
  ############################################################################
  def __init__              ( self                                         ) :
    ##########################################################################
    self . ColorModel = "RGBA"
    self . ValueType  = "UInt8"
    ##########################################################################
    self . R          = int ( 0                                              )
    self . G          = int ( 0                                              )
    self . B          = int ( 0                                              )
    self . A          = int ( 255                                            )
    ##########################################################################
    return
  ############################################################################
  def __init__              ( self , R , G , B , A                         ) :
    ##########################################################################
    self . ColorModel = "RGBA"
    self . ValueType  = "UInt8"
    ##########################################################################
    self . R          = int ( R                                              )
    self . G          = int ( G                                              )
    self . B          = int ( B                                              )
    self . A          = int ( A                                              )
    ##########################################################################
    return
  ############################################################################
  def __del__    ( self                                                    ) :
    ##########################################################################
    ##########################################################################
    return
  ############################################################################
  ## 轉成JSON格式
  ############################################################################
  def toJson ( self                                                        ) :
    return   { "Model" : "RGBA"                                            , \
               "Value" : "UInt8"                                           , \
               "R"     : self . R                                          , \
               "G"     : self . G                                          , \
               "B"     : self . B                                          , \
               "A"     : self . A                                            }
  ############################################################################
  ## 從JSON格式轉換顏色模型
  ############################################################################
  def fromJson     ( self , JSON                                           ) :
    ##########################################################################
    KEYs =         [ "Model" , "Value" , "R" , "G" , "B" , "A"               ]
    ##########################################################################
    for K in KEYs                                                            :
      if           ( K not in JSON                                         ) :
        return False
    ##########################################################################
    if             ( "RGBA"  != JSON [ "Model" ]                           ) :
      return   False
    ##########################################################################
    if             ( "UInt8" != JSON [ "Value" ]                           ) :
      return   False
    ##########################################################################
    self . R = int ( JSON [ "R" ]                                            )
    self . G = int ( JSON [ "G" ]                                            )
    self . B = int ( JSON [ "B" ]                                            )
    self . A = int ( JSON [ "A" ]                                            )
    ##########################################################################
    return     True
  ############################################################################
  def fromRGBAf    ( self , fRGB                                           ) :
    ##########################################################################
    self . R = int ( fRGB . R * 255                                          )
    self . G = int ( fRGB . G * 255                                          )
    self . B = int ( fRGB . B * 255                                          )
    self . A = int ( fRGB . A * 255                                          )
    ##########################################################################
    if             ( self . R < 0                                          ) :
      self . R = 0
    ##########################################################################
    if             ( self . G < 0                                          ) :
      self . G = 0
    ##########################################################################
    if             ( self . B < 0                                          ) :
      self . B = 0
    ##########################################################################
    if             ( self . A < 0                                          ) :
      self . A = 0
    ##########################################################################
    if             ( self . R > 255                                        ) :
      self . R = 255
    ##########################################################################
    if             ( self . G > 255                                        ) :
      self . G = 255
    ##########################################################################
    if             ( self . B > 255                                        ) :
      self . B = 255
    ##########################################################################
    if             ( self . A > 255                                        ) :
      self . A = 255
    ##########################################################################
    return
  ############################################################################
  def fromRGBi ( self , iRGB                                               ) :
    ##########################################################################
    self . R = iRGB . R
    self . G = iRGB . G
    self . B = iRGB . B
    ##########################################################################
    return
##############################################################################
