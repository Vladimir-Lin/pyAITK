# -*- coding: utf-8 -*-
##############################################################################
## RGBf
## RGB顏色模型 0~1浮點值域
##############################################################################
import cv2
import numpy as np
import colour
from . CommonColor import CommonColor
##############################################################################
class RGBf                    ( CommonColor                                ) :
  ############################################################################
  def __init__                ( self                                       ) :
    ##########################################################################
    self . ColorModel = "RGB"
    self . ValueType  = "Float"
    ##########################################################################
    self . R          = float ( 0.0                                          )
    self . G          = float ( 0.0                                          )
    self . B          = float ( 0.0                                          )
    ##########################################################################
    return
  ############################################################################
  def __del__    ( self                                                    ) :
    ##########################################################################
    ##########################################################################
    return
  ############################################################################
  ## 轉成JSON格式
  ############################################################################
  def toJson ( self                                                        ) :
    return   { "Model" : "RGB"                                             , \
               "Value" : "Float"                                           , \
               "R"     : self . R                                          , \
               "G"     : self . G                                          , \
               "B"     : self . B                                            }
  ############################################################################
  ## 從JSON格式轉換顏色模型
  ############################################################################
  def fromJson       ( self , JSON                                         ) :
    ##########################################################################
    KEYs =           [ "Model" , "Value" , "R" , "G" , "B"                   ]
    ##########################################################################
    for K in KEYs                                                            :
      if             ( K not in JSON                                       ) :
        return False
    ##########################################################################
    if               ( "RGB"   != JSON [ "Model" ]                         ) :
      return   False
    ##########################################################################
    if               ( "Float" != JSON [ "Value" ]                         ) :
      return   False
    ##########################################################################
    self . R = float ( JSON [ "R" ]                                          )
    self . G = float ( JSON [ "G" ]                                          )
    self . B = float ( JSON [ "B" ]                                          )
    ##########################################################################
    return     True
  ############################################################################
  def fromRGBi     ( self , iRGB                                           ) :
    ##########################################################################
    self . R = int ( float ( iRGB . R ) / 255.0                              )
    self . G = int ( float ( iRGB . G ) / 255.0                              )
    self . B = int ( float ( iRGB . B ) / 255.0                              )
    ##########################################################################
    if             ( self . R < 0.0                                        ) :
      self . R = 0.0
    ##########################################################################
    if             ( self . G < 0.0                                        ) :
      self . G = 0.0
    ##########################################################################
    if             ( self . B < 0.0                                        ) :
      self . B = 0.0
    ##########################################################################
    if             ( self . R > 1.0                                        ) :
      self . R = 1.0
    ##########################################################################
    if             ( self . G > 1.0                                        ) :
      self . G = 1.0
    ##########################################################################
    if             ( self . B > 1.0                                        ) :
      self . B = 1.0
    ##########################################################################
    return
##############################################################################
