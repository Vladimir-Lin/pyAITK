# -*- coding: utf-8 -*-
##############################################################################
## HSVi
## HSV顏色模型 0~255整數值域
##############################################################################
import cv2
import numpy as np
import colour
from . CommonColor import CommonColor
from . RGBi        import RGBi
##############################################################################
class HSVi                  ( CommonColor                                  ) :
  ############################################################################
  def __init__              ( self                                         ) :
    ##########################################################################
    self . ColorModel = "HSV"
    self . ValueType  = "UInt8"
    ##########################################################################
    self . H          = int ( 0                                              )
    self . S          = int ( 0                                              )
    self . V          = int ( 0                                              )
    ##########################################################################
    return
  ############################################################################
  def __del__    ( self                                                    ) :
    ##########################################################################
    ##########################################################################
    return
  ############################################################################
  ## 轉成JSON格式
  ############################################################################
  def toJson ( self                                                        ) :
    return   { "Model" : "HSV"                                             , \
               "Value" : "UInt8"                                           , \
               "H"     : self . H                                          , \
               "S"     : self . S                                          , \
               "V"     : self . V                                            }
  ############################################################################
  ## 從JSON格式轉換顏色模型
  ############################################################################
  def fromJson     ( self , JSON                                           ) :
    ##########################################################################
    KEYs =         [ "Model" , "Value" , "H" , "S" , "V"                     ]
    ##########################################################################
    for K in KEYs                                                            :
      if           ( K not in JSON                                         ) :
        return False
    ##########################################################################
    if             ( "HSV"   != JSON [ "Model" ]                           ) :
      return   False
    ##########################################################################
    if             ( "UInt8" != JSON [ "Value" ]                           ) :
      return   False
    ##########################################################################
    self . H = int ( JSON [ "H" ]                                            )
    self . S = int ( JSON [ "S" ]                                            )
    self . V = int ( JSON [ "V" ]                                            )
    ##########################################################################
    return     True
  ############################################################################
  def fromHSVf                        ( self , fHSV                        ) :
    ##########################################################################
    self . H = self . ConstraintUInt8 (        fHSV . H * 255.0              )
    self . S = self . ConstraintUInt8 (        fHSV . S * 255.0              )
    self . V = self . ConstraintUInt8 (        fHSV . V * 255.0              )
    ##########################################################################
    return True
  ############################################################################
  def fromRGBi                 ( self , iRGB                               ) :
    ##########################################################################
    M        = cv2  . cvtColor ( iRGB . toNpBGR ( ) , cv2 . COLOR_BGR2HSV    )
    ##########################################################################
    self . H = int             ( M [ 0 ] [ 0 ] [ 0                         ] )
    self . S = int             ( M [ 0 ] [ 0 ] [ 1                         ] )
    self . V = int             ( M [ 0 ] [ 0 ] [ 2                         ] )
    ##########################################################################
    return True
  ############################################################################
  def toHSV ( self                                                         ) :
    return  [ self . H , self . S , self . V                                 ]
  ############################################################################
  def toNpHSV         ( self                                               ) :
    return np . array ( [ [ self . toHSV ( ) ] ] , dtype = np . uint8        )
  ############################################################################
  def toRGBi           ( self                                              ) :
    ##########################################################################
    M = cv2 . cvtColor ( self . toNpHSV ( ) , cv2 . COLOR_HSV2BGR            )
    ##########################################################################
    B = int            ( M [ 0 ] [ 0 ] [ 0                                 ] )
    G = int            ( M [ 0 ] [ 0 ] [ 1                                 ] )
    R = int            ( M [ 0 ] [ 0 ] [ 2                                 ] )
    ##########################################################################
    return RGBi        ( R , G , B                                           )
  ############################################################################
  ############################################################################
##############################################################################
